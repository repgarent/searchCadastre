********* QUERY **********
SET statement_timeout = 0;
**************************

SET
********* QUERY **********
SET client_encoding = 'UTF8';
**************************

SET
********* QUERY **********
SET standard_conforming_strings = on;
**************************

SET
********* QUERY **********
SET check_function_bodies = false;
**************************

SET
********* QUERY **********
SET client_min_messages = warning;
**************************

SET
********* QUERY **********
CREATE SCHEMA opencadastre AUTHORIZATION postgres;
**************************

CREATE SCHEMA
********* QUERY **********
GRANT ALL ON SCHEMA opencadastre TO postgres;
**************************

GRANT
********* QUERY **********
COMMENT ON SCHEMA opencadastre IS 'OpenCadastre';
**************************

COMMENT
********* QUERY **********
SET search_path = opencadastre, public, pg_catalog;
**************************

SET
********* QUERY **********
CREATE TABLE om_collectivite (
    om_collectivite integer NOT NULL,
    libelle character varying(100) NOT NULL,
    niveau character varying(1) NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_collectivite_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
CREATE TABLE om_droit (
    om_droit integer NOT NULL,
    libelle character varying(100) NOT NULL,
    om_profil integer NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_droit_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER SEQUENCE om_droit_seq OWNED BY om_droit.om_droit;
**************************

ALTER SEQUENCE
********* QUERY **********
CREATE TABLE om_etat (
    om_etat integer NOT NULL,
    om_collectivite integer NOT NULL,
    id character varying(50) NOT NULL,
    libelle character varying(50) NOT NULL,
    actif boolean,
    orientation character varying(2) NOT NULL,
    format character varying(5) NOT NULL,
    footerfont character varying(20) NOT NULL,
    footerattribut character varying(20) DEFAULT ''::character varying NOT NULL,
    footertaille integer NOT NULL,
    logo character varying(30) NOT NULL,
    logoleft integer NOT NULL,
    logotop integer NOT NULL,
    titre text NOT NULL,
    titreleft integer NOT NULL,
    titretop integer NOT NULL,
    titrelargeur integer NOT NULL,
    titrehauteur integer NOT NULL,
    titrefont character varying(20) NOT NULL,
    titreattribut character varying(20) DEFAULT ''::character varying NOT NULL,
    titretaille integer NOT NULL,
    titrebordure character varying(20) NOT NULL,
    titrealign character varying(20) NOT NULL,
    corps text NOT NULL,
    corpsleft integer NOT NULL,
    corpstop integer NOT NULL,
    corpslargeur integer NOT NULL,
    corpshauteur integer NOT NULL,
    corpsfont character varying(20) NOT NULL,
    corpsattribut character varying(20) DEFAULT ''::character varying NOT NULL,
    corpstaille integer NOT NULL,
    corpsbordure character varying(20) NOT NULL,
    corpsalign character varying(20) NOT NULL,
    om_sql text NOT NULL,
    sousetat text DEFAULT ''::text NOT NULL,
    se_font character varying(20) NOT NULL,
    se_margeleft integer NOT NULL,
    se_margetop integer NOT NULL,
    se_margeright integer NOT NULL,
    se_couleurtexte character varying(11) NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_etat_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
CREATE TABLE om_lettretype (
    om_lettretype integer NOT NULL,
    om_collectivite integer NOT NULL,
    id character varying(50) NOT NULL,
    libelle character varying(50) NOT NULL,
    actif boolean,
    orientation character varying(2) NOT NULL,
    format character varying(5) NOT NULL,
    logo character varying(30) NOT NULL,
    logoleft integer NOT NULL,
    logotop integer NOT NULL,
    titre text NOT NULL,
    titreleft integer NOT NULL,
    titretop integer NOT NULL,
    titrelargeur integer NOT NULL,
    titrehauteur integer NOT NULL,
    titrefont character varying(20) NOT NULL,
    titreattribut character varying(20) DEFAULT ''::character varying NOT NULL,
    titretaille integer NOT NULL,
    titrebordure character varying(20) NOT NULL,
    titrealign character varying(20) NOT NULL,
    corps text NOT NULL,
    corpsleft integer NOT NULL,
    corpstop integer NOT NULL,
    corpslargeur integer NOT NULL,
    corpshauteur integer NOT NULL,
    corpsfont character varying(20) NOT NULL,
    corpsattribut character varying(20) DEFAULT ''::character varying NOT NULL,
    corpstaille integer NOT NULL,
    corpsbordure character varying(20) NOT NULL,
    corpsalign character varying(20) NOT NULL,
    om_sql text NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_lettretype_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
CREATE TABLE om_parametre (
    om_parametre integer NOT NULL,
    libelle character varying(20) NOT NULL,
    valeur character varying(50) NOT NULL,
    om_collectivite integer NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_parametre_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER SEQUENCE om_parametre_seq OWNED BY om_parametre.om_parametre;
**************************

ALTER SEQUENCE
********* QUERY **********
CREATE TABLE om_profil (
    om_profil integer NOT NULL,
    libelle character varying(100) NOT NULL,
    hierarchie integer DEFAULT 0 NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_profil_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER SEQUENCE om_profil_seq OWNED BY om_profil.om_profil;
**************************

ALTER SEQUENCE
********* QUERY **********
CREATE TABLE om_sig_map (
    om_sig_map integer NOT NULL,
    om_collectivite integer NOT NULL,
    id character varying(50) NOT NULL,
    libelle character varying(50) NOT NULL,
    actif boolean,
    zoom character varying(3) NOT NULL,
    fond_osm character varying(3) NOT NULL,
    fond_bing character varying(3) NOT NULL,
    fond_sat character varying(3) NOT NULL,
    layer_info character varying(3) NOT NULL,
    etendue character varying(60) NOT NULL,
    projection_externe character varying(60) NOT NULL,
    url text NOT NULL,
    om_sql text NOT NULL,
    maj character varying(3) NOT NULL,
    table_update character varying(30) NOT NULL,
    champ character varying(30) NOT NULL,
    retour character varying(50) NOT NULL,
    type_geometrie character varying(30),
    lib_geometrie character varying(50)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE om_sig_map_comp (
    om_sig_map_comp integer NOT NULL,
    om_sig_map integer NOT NULL,
    libelle character varying(50) NOT NULL,
    ordre integer NOT NULL,
    actif character varying(3),
    comp_maj character varying(3),
    type_geometrie character varying(30),
    comp_table_update character varying(30),
    comp_champ character varying(30)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_sig_map_comp_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
CREATE SEQUENCE om_sig_map_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
CREATE TABLE om_sig_map_wms (
    om_sig_map_wms integer NOT NULL,
    om_sig_wms integer NOT NULL,
    om_sig_map integer NOT NULL,
    ol_map character varying(50) NOT NULL,
    ordre integer NOT NULL,
    visibility character varying(3),
    panier character varying(3),
    pa_nom character varying(50),
    pa_layer character varying(50),
    pa_attribut character varying(50),
    pa_encaps character varying(3),
    pa_sql text,
    pa_type_geometrie character varying(30),
    sql_filter text,
    baselayer character varying(3),
    singletile character varying(3),
	maxzoomlevel integer
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_sig_map_wms_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
CREATE TABLE om_sig_wms (
    om_sig_wms integer NOT NULL,
    libelle character varying(50) NOT NULL,
    om_collectivite integer NOT NULL,
    id character varying(50) NOT NULL,
    chemin character varying(255) NOT NULL,
    couches character varying(255) NOT NULL,
	cache_type character varying(3),
	cache_gfi_chemin character varying(255),
	cache_gfi_couches character varying(255)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_sig_wms_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
CREATE TABLE om_sousetat (
    om_sousetat integer NOT NULL,
    om_collectivite integer NOT NULL,
    id character varying(50) NOT NULL,
    libelle character varying(50) NOT NULL,
    actif boolean,
    titre text NOT NULL,
    titrehauteur integer NOT NULL,
    titrefont character varying(20) NOT NULL,
    titreattribut character varying(20) DEFAULT ''::character varying NOT NULL,
    titretaille integer NOT NULL,
    titrebordure character varying(20) NOT NULL,
    titrealign character varying(20) NOT NULL,
    titrefond character varying(20) NOT NULL,
    titrefondcouleur character varying(11) NOT NULL,
    titretextecouleur character varying(11) NOT NULL,
    intervalle_debut integer NOT NULL,
    intervalle_fin integer NOT NULL,
    entete_flag character varying(20) NOT NULL,
    entete_fond character varying(20) NOT NULL,
    entete_orientation character varying(100) NOT NULL,
    entete_hauteur integer NOT NULL,
    entetecolone_bordure character varying(200) NOT NULL,
    entetecolone_align character varying(100) NOT NULL,
    entete_fondcouleur character varying(11) NOT NULL,
    entete_textecouleur character varying(11) NOT NULL,
    tableau_largeur integer NOT NULL,
    tableau_bordure character varying(20) NOT NULL,
    tableau_fontaille integer NOT NULL,
    bordure_couleur character varying(11) NOT NULL,
    se_fond1 character varying(11) NOT NULL,
    se_fond2 character varying(11) NOT NULL,
    cellule_fond character varying(20) NOT NULL,
    cellule_hauteur integer NOT NULL,
    cellule_largeur character varying(200) NOT NULL,
    cellule_bordure_un character varying(200) NOT NULL,
    cellule_bordure character varying(200) NOT NULL,
    cellule_align character varying(100) NOT NULL,
    cellule_fond_total character varying(20) NOT NULL,
    cellule_fontaille_total integer NOT NULL,
    cellule_hauteur_total integer NOT NULL,
    cellule_fondcouleur_total character varying(11) NOT NULL,
    cellule_bordure_total character varying(200) NOT NULL,
    cellule_align_total character varying(100) NOT NULL,
    cellule_fond_moyenne character varying(20) NOT NULL,
    cellule_fontaille_moyenne integer NOT NULL,
    cellule_hauteur_moyenne integer NOT NULL,
    cellule_fondcouleur_moyenne character varying(11) NOT NULL,
    cellule_bordure_moyenne character varying(200) NOT NULL,
    cellule_align_moyenne character varying(100) NOT NULL,
    cellule_fond_nbr character varying(20) NOT NULL,
    cellule_fontaille_nbr integer NOT NULL,
    cellule_hauteur_nbr integer NOT NULL,
    cellule_fondcouleur_nbr character varying(11) NOT NULL,
    cellule_bordure_nbr character varying(200) NOT NULL,
    cellule_align_nbr character varying(100) NOT NULL,
    cellule_numerique character varying(200) NOT NULL,
    cellule_total character varying(100) NOT NULL,
    cellule_moyenne character varying(100) NOT NULL,
    cellule_compteur character varying(100) NOT NULL,
    om_sql text NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_sousetat_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
CREATE TABLE om_tdb (
    om_tdb integer NOT NULL,
    login character varying(40) NOT NULL,
    bloc character varying(10) NOT NULL,
    "position" integer,
    om_widget integer NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_tdb_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
CREATE TABLE om_utilisateur (
    om_utilisateur integer NOT NULL,
    nom character varying(30) NOT NULL,
    email character varying(40) NOT NULL,
    login character varying(30) NOT NULL,
    pwd character varying(100) NOT NULL,
    om_collectivite integer NOT NULL,
    om_type character varying(20) DEFAULT 'DB'::character varying NOT NULL,
    om_profil integer NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_utilisateur_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER SEQUENCE om_utilisateur_seq OWNED BY om_utilisateur.om_utilisateur;
**************************

ALTER SEQUENCE
********* QUERY **********
CREATE TABLE om_widget (
    om_widget integer NOT NULL,
    om_collectivite integer NOT NULL,
    libelle character varying(40) NOT NULL,
    lien character varying(80) NOT NULL,
    texte text NOT NULL,
    om_profil integer NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE om_widget_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE ONLY om_collectivite
    ADD CONSTRAINT om_collectivite_pkey PRIMARY KEY (om_collectivite);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_droit
    ADD CONSTRAINT om_droit_libelle_om_profil_key UNIQUE (libelle, om_profil);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_droit
    ADD CONSTRAINT om_droit_pkey PRIMARY KEY (om_droit);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_etat
    ADD CONSTRAINT om_etat_pkey PRIMARY KEY (om_etat);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_lettretype
    ADD CONSTRAINT om_lettretype_pkey PRIMARY KEY (om_lettretype);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_parametre
    ADD CONSTRAINT om_parametre_pkey PRIMARY KEY (om_parametre);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_profil
    ADD CONSTRAINT om_profil_pkey PRIMARY KEY (om_profil);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_sig_map_comp
    ADD CONSTRAINT om_sig_map_comp_pkey PRIMARY KEY (om_sig_map_comp);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_sig_map
    ADD CONSTRAINT om_sig_map_pkey PRIMARY KEY (om_sig_map);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_sig_map_wms
    ADD CONSTRAINT om_sig_map_wms_pkey PRIMARY KEY (om_sig_map_wms);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_sig_wms
    ADD CONSTRAINT om_sig_wms_pkey PRIMARY KEY (om_sig_wms);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_sousetat
    ADD CONSTRAINT om_sousetat_pkey PRIMARY KEY (om_sousetat);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_tdb
    ADD CONSTRAINT om_tdb_pkey PRIMARY KEY (om_tdb);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_utilisateur
    ADD CONSTRAINT om_utilisateur_login_key UNIQUE (login);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_utilisateur
    ADD CONSTRAINT om_utilisateur_pkey PRIMARY KEY (om_utilisateur);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_widget
    ADD CONSTRAINT om_widget_pkey PRIMARY KEY (om_widget);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_droit
    ADD CONSTRAINT om_droit_om_profil_fkey FOREIGN KEY (om_profil) REFERENCES om_profil(om_profil);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_etat
    ADD CONSTRAINT om_etat_om_collectivite_fkey FOREIGN KEY (om_collectivite) REFERENCES om_collectivite(om_collectivite);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_lettretype
    ADD CONSTRAINT om_lettretype_om_collectivite_fkey FOREIGN KEY (om_collectivite) REFERENCES om_collectivite(om_collectivite);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_parametre
    ADD CONSTRAINT om_parametre_om_collectivite_fkey FOREIGN KEY (om_collectivite) REFERENCES om_collectivite(om_collectivite);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_sig_map_comp
    ADD CONSTRAINT om_sig_map_comp_om_sig_map_fkey FOREIGN KEY (om_sig_map) REFERENCES om_sig_map(om_sig_map);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_sig_map
    ADD CONSTRAINT om_sig_map_om_collectivite_fkey FOREIGN KEY (om_collectivite) REFERENCES om_collectivite(om_collectivite);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_sig_map_wms
    ADD CONSTRAINT om_sig_map_wms_om_sig_map_fkey FOREIGN KEY (om_sig_map) REFERENCES om_sig_map(om_sig_map);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_sig_map_wms
    ADD CONSTRAINT om_sig_map_wms_om_sig_wms_fkey FOREIGN KEY (om_sig_wms) REFERENCES om_sig_wms(om_sig_wms);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_sig_wms
    ADD CONSTRAINT om_sig_wms_om_collectivite_fkey FOREIGN KEY (om_collectivite) REFERENCES om_collectivite(om_collectivite);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_sousetat
    ADD CONSTRAINT om_sousetat_om_collectivite_fkey FOREIGN KEY (om_collectivite) REFERENCES om_collectivite(om_collectivite);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_tdb
    ADD CONSTRAINT om_tdb_om_widget_fkey FOREIGN KEY (om_widget) REFERENCES om_widget(om_widget);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_utilisateur
    ADD CONSTRAINT om_utilisateur_om_collectivite_fkey FOREIGN KEY (om_collectivite) REFERENCES om_collectivite(om_collectivite);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_utilisateur
    ADD CONSTRAINT om_utilisateur_om_profil_fkey FOREIGN KEY (om_profil) REFERENCES om_profil(om_profil);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_widget
    ADD CONSTRAINT om_widget_om_collectivite_fkey FOREIGN KEY (om_collectivite) REFERENCES om_collectivite(om_collectivite);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE ONLY om_widget
    ADD CONSTRAINT om_widget_om_profil_fkey FOREIGN KEY (om_profil) REFERENCES om_profil(om_profil);
**************************

ALTER TABLE
********* QUERY **********
INSERT INTO om_collectivite (om_collectivite, libelle, niveau) VALUES
(1, 'LIBREVILLE', '1'),
(2, 'MULTI', '2');
**************************

INSERT 0 2
********* QUERY **********
INSERT INTO om_parametre VALUES
(1, 'ville', 'LIBREVILLE', 1),
(2, 'ville', 'MULTI', 2);
**************************

INSERT 0 2
********* QUERY **********
INSERT INTO om_profil VALUES
(1, 'ADMINISTRATEUR', 5),
(2, 'SUPER UTILISATEUR', 4),
(3, 'UTILISATEUR', 3),
(4, 'UTILISATEUR LIMITE', 2),
(5, 'CONSULTATION', 1);
**************************

INSERT 0 5
********* QUERY **********
INSERT INTO om_droit VALUES
(1, 'om_utilisateur', 1),
(2, 'om_droit', 1),
(3, 'om_profil', 1),
(4, 'om_collectivite', 1),
(5, 'om_parametre', 2),
(6, 'om_etat', 2),
(7, 'om_sousetat', 2),
(8, 'om_lettretype', 2),
(9, 'gen', 1),
(10, 'om_sig_map', 2),
(11, 'om_sig_map_comp', 2),
(12, 'om_sig_map_wms', 2),
(13, 'om_sig_wms', 2),
(14, 'directory', 1),
(15, 'import', 1),
(16, 'edition', 3),
(17, 'reqmo', 2),
(18, 'password', 5),
(19, 'om_widget', 2),
(20, 'om_tdb', 2);
**************************

INSERT 0 20
********* QUERY **********
INSERT INTO om_utilisateur (om_utilisateur, nom, login, pwd, om_profil, email, om_collectivite) VALUES
(1, 'Administrateur', 'admin', '21232f297a57a5a743894a0e4a801fc3', 1, 'contact@openmairie.org', 1),
(2, 'Démonstration', 'demo', 'fe01ce2a7fbac8fafaed7c982a04e229', 1, 'contact@openmairie.org', 1);
**************************

INSERT 0 2
********* QUERY **********
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, footerfont, footerattribut, footertaille, logo, logoleft, logotop, titre, titreleft, titretop, titrelargeur, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, corps, corpsleft, corpstop, corpslargeur, corpshauteur, corpsfont, corpsattribut, corpstaille, corpsbordure, corpsalign, om_sql, sousetat, se_font, se_margeleft, se_margetop, se_margeright, se_couleurtexte) VALUES
(1, 1, 'om_collectivite', 'om_collectivite gen le 12/11/2010', TRUE, 'P', 'A4', 'helvetica', 'I', 8, 'logopdf.png', 58, 7, 'le &aujourdhui', 41, 36, 130, 10, 'helvetica', 'B', 15, '0', 'C', E'[om_collectivite]\r\n[libelle]\r\n[niveau]', 7, 57, 195, 5, 'helvetica', '', 10, '0', 'J', 'select om_collectivite.om_collectivite as om_collectivite,om_collectivite.libelle as libelle,om_collectivite.niveau as niveau from &DB_PREFIXEom_collectivite where om_collectivite.om_collectivite=''&idx''', 'om_parametre.om_collectivite', 'helvetica', 8, 5, 5, '0-0-0');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sousetat VALUES
(1, 1, 'om_parametre.om_collectivite', 'gen le 12/11/2010', TRUE, 'liste om_parametre', 10, 'helvetica', 'B', 10, '0', 'L', '0', '255-255-255', '0-0-0', 0, 5, '1', '1', '0|0|0', 7, 'TLB|TLB|LTBR', 'C|C|C', '255-255-255', '0-0-0', 195, '1', 10, '0-0-0', '243-246-246', '255-255-255', '1', 7, '65|65|65', 'TLB|TLB|LTBR', 'TLB|TLB|LTBR', 'C|C|C', '1', 10, 15, '255-255-255', 'TLB|TLB|LTBR', 'C|C|C', '1', 10, 5, '212-219-220', 'TLB|TLB|LTBR', 'C|C|C', '1', 10, 7, '255-255-255', 'TLB|TLB|LTBR', 'C|C|C', '999|999|999', '0|0|0', '0|0|0', '0|0|0', 'select om_parametre.om_parametre as om_parametre,om_parametre.libelle as libelle,om_parametre.valeur as valeur from &DB_PREFIXEom_parametre where om_parametre.om_collectivite=''&idx''');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre, titreleft, titretop, titrelargeur, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, corps, corpsleft, corpstop, corpslargeur, corpshauteur, corpsfont, corpsattribut, corpstaille, corpsbordure, corpsalign, om_sql) VALUES
(1, 1, 'om_utilisateur', 'lettre aux utilisateurs', TRUE, 'P', 'A4', 'logo.png', 10, 10, 'le &datecourrier', 130, 16, 0, 10, 'arial', '', 14, '0', 'L', 'Nous avons le plaisir de vous envoyer votre login et votre mot de passevotre login [login] Vous souhaitant bonne receptionVotre administrateur', 40, 106, 110, 5, 'times', '', 10, '0', 'J', 'select nom,login,om_collectivite.libelle as collectivite from &DB_PREFIXEom_utilisateur inner join &DB_PREFIXEom_collectivite on om_collectivite.om_collectivite=om_utilisateur.om_collectivite where om_utilisateur= &idx');
**************************

INSERT 0 1
********* QUERY **********
SELECT pg_catalog.setval('om_collectivite_seq', 3, false);
**************************

 setval 
--------
      3
(1 row)

********* QUERY **********
SELECT pg_catalog.setval('om_parametre_seq', 2, true);
**************************

 setval 
--------
      2
(1 row)

********* QUERY **********
SELECT pg_catalog.setval('om_profil_seq', 5, true);
**************************

 setval 
--------
      5
(1 row)

********* QUERY **********
SELECT pg_catalog.setval('om_droit_seq', 20, true);
**************************

 setval 
--------
     20
(1 row)

********* QUERY **********
SELECT pg_catalog.setval('om_utilisateur_seq', 2, true);
**************************

 setval 
--------
      2
(1 row)

********* QUERY **********
SELECT pg_catalog.setval('om_etat_seq', 2, false);
**************************

 setval 
--------
      2
(1 row)

********* QUERY **********
SELECT pg_catalog.setval('om_sousetat_seq', 2, false);
**************************

 setval 
--------
      2
(1 row)

********* QUERY **********
SELECT pg_catalog.setval('om_lettretype_seq', 2, false);
**************************

 setval 
--------
      2
(1 row)

********* QUERY **********
CREATE TABLE bati (tmp character varying(550));
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE fanr (tmp character varying(550));
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE lloc (tmp character varying(550));
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE nbat (tmp character varying(550));
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE pdll (tmp character varying(550));
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE prop (tmp character varying(550));
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE parcelle (
	parcelle character varying(19),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	ccopre character varying (3),
	ccosec character varying (2),
	dnupla character varying (4),
	dcntpa integer,
	dsrpar character varying (1),
	dnupro character varying (6),
	comptecommunal character varying (12),
	jdatat date,
	dreflf character varying (5),
	gpdl character varying (1),
	cprsecr character varying (3),
	ccosecr character varying (2),
	dnuplar character varying (4),
	dnupdl character varying (3),
	pdl character varying (22),
	gurbpa character varying (1),
	dparpi character varying (4),
	ccoarp character varying (1),
	gparnf character varying (1),
	gparbat character varying (1),
	parrev character varying (12),
	gpardp character varying (01),
	fviti character varying (01),
	dnvoiri character varying (4),
	dindic character varying (1),
	ccovoi character varying (5),
	ccoriv character varying (4),
	voie character varying (15),
	ccocif character varying (4),
	gpafpd character varying (1),
	ajoutcoherence character varying(1),
	cconvo character varying(4),
	dvoilib character varying(26),
	ccocomm character varying(3),
	ccoprem character varying(3),
	ccosecm character varying(2),
	dnuplam character varying(4),
	parcellefiliation character varying(19),
	type_filiation character varying(1),
	geo_parcelle character varying(16)

) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_parcelle
   ON parcelle (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE suf (
	suf character varying(21),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	ccopre character varying (3),
	ccosec character varying (2),
	dnupla character varying (4),
	parcelle character varying (19),
	ccosub character varying (2),
	dcntsf integer,
	dnupro character varying (6),
	comptecommunal character varying (12),
	gnexps character varying (2),
	drcsub numeric(10,2),
	drcsuba numeric(10,2),
	ccostn character varying (1),
	cgrnum character varying (2),
	dsgrpf character varying (2),
	dclssf character varying (2),
	cnatsp character varying (5),
	drgpos character varying (1),
	ccoprel character varying (3),
	ccosecl character varying (2),
	dnuplal character varying (4),
	dnupdl character varying (3),
	pdl character varying (22),
	dnulot character varying (7),
	rclsi character varying (46),
	gnidom character varying (1),
	topja character varying (1),
	datja date,
	postel character varying (1)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_suf
   ON suf (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE sufexoneration (
	sufexoneration character varying (23),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	ccopre character varying (3),
	ccosec character varying (2),
	dnupla character varying (4),
	ccosub character varying (2),
	suf character varying(21),
	rnuexn character varying (2),
	vecexn numeric(10,2),
	ccolloc character varying (2),
	pexn integer,
	gnexts character varying (2),
	jandeb character varying (4),
	jfinex character varying (4),
	fcexn character varying (10),
	fcexna character varying (10),
	rcexna character varying (10),
	rcexnba numeric(10,2),
	mpexnba character varying (10)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_sufexoneration
   ON sufexoneration (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE suftaxation (
	suftaxation character varying (21),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	ccopre character varying (3),
	ccosec character varying (2),
	dnupla character varying (4),
	ccosub character varying (2),
	suf character varying(21) ,
	c1majposa numeric(10,2),
	c1bisufad numeric(10,2),
	c2majposa numeric(10,2),
	c2bisufad numeric(10,2),
	c3majposa numeric(10,2),
	c3bisufad numeric(10,2),
	c4majposa numeric(10,2),
	c4bisufad numeric(10,2),
	cntmajtc integer
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_suftaxation
   ON suftaxation (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE local00 (
	local00 character varying (14),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	invar character varying (10),
	ccopre character varying (3),
	ccosec character varying (2),
	dnupla character varying (4),
	parcelle character varying(19),
	dnubat character varying (2),
	descr character varying (2),
	dniv character varying (2),
	dpor character varying (5),
	ccoriv character varying (4),
	voie character varying (15),
	ccovoi character varying (5),
	dnvoiri character varying (4),
	dindic character varying (1),
	ccocif character varying (4),
	dvoilib character varying (30),
	cleinvar character varying (1),
	locinc character varying (1)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_local00
   ON local00 (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE local10 (
	local10 character varying (14),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	invar character varying (10),
	local00 character varying (14),
	ccopre character varying (3),
	ccosec character varying (2),
	dnupla character varying (4),
	parcelle character varying(19),
	ccoriv character varying (4),
	voie character varying (15),
	ccovoi character varying (5),
	dnvoiri character varying (4),
	gpdl character varying (1),
	dsrpar character varying (1),
	dnupro character varying (6),
	comptecommunal character varying (12),
	jdatat date,
	dnufnl character varying (6),
	ccoeva character varying (1),
	ccitlv character varying (1),
	dteloc character varying (1),
	gtauom character varying (2),
	dcomrd character varying (3),
	ccoplc character varying (1),
	cconlc character varying (2),
	dvltrt integer,
	ccoape character varying (4),
	cc48lc character varying (2),
	dloy48a integer,
	top48a character varying (1),
	dnatlc character varying (1),
	dnupas character varying (8),
	gnexcf character varying (2),
	dtaucf character varying (3),
	cchpr character varying (1),
	jannat character varying (4),
	dnbniv character varying (2),
	hlmsem character varying (1),
	postel character varying (1),
	dnatcg character varying (2),
	jdatcgl character varying (8),
	dnutbx character varying (6),
	dvltla character varying (9),
	janloc character varying (4),
	ccsloc character varying (2),
	fburx integer,
	gimtom character varying (1),
	cbtabt character varying (2),
	jdtabt character varying (4),
	jrtabt character varying (4),
	jacloc character varying (4)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_local10
   ON local10 (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE pev (
	pev character varying (17),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	invar character varying (10),
	local10 character varying (14),
	dnupev character varying (3),
	ccoaff character varying (1),
	ccostb character varying (1),
	dcapec character varying (2),
	dcetlc numeric(3,2),
	dcsplc character varying (3),
	dsupot integer,
	dvlper integer,
	dvlpera integer,
	gnexpl character varying (2),
	libocc character varying (30),
	ccthp character varying (1),
	retimp character varying (1),
	dnuref character varying (3),
	rclsst character varying (32),
	gnidom character varying (1),
	dcsglc character varying (3),
	ccogrb character varying (1),
	cocdi character varying (4),
	cosatp character varying (3),
	gsatp character varying (1),
	clocv character varying (1),
	dvltpe integer,
	dcralc character varying (3)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_pev
   ON pev (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE pevexoneration (
	pevexoneration character varying (24),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	invar character varying (10),
	Janbil character varying (4),
	dnupev character varying (3),
	pev character varying (17),
	dnuexb character varying (3),
	ccolloc character varying (2),
	pexb numeric(5,2),
	gnextl character varying (2),
	jandeb character varying (4),
	janimp character varying (4),
	vecdif character varying (9),
	vecdifa character varying (9),
	fcexb character varying (9),
	fcexba character varying (9),
	rcexba character varying (9),
	dvldif2 integer,
	dvldif2a integer,
	fcexb2 integer,
	fcexba2 integer,
	rcexba2 integer
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_pevexoneration
   ON pevexoneration (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE pevtaxation (
	pevtaxation character varying (17),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	invar character varying (10),
	janbil character varying (4),
	dnupev character varying (3),
	pev character varying (17),
	co_vlbai integer,
	co_vlbaia integer,
	co_bipevla integer,
	de_vlbai integer,
	de_vlbaia integer,
	de_bipevla integer,
	re_vlbai integer,
	re_vlbaia integer,
	re_bipevla integer,
	gp_vlbai integer,
	gp_vlbaia integer,
	gp_bipevla integer,
	bateom integer,
	baomec integer,
	tse_vlbai integer,
	tse_vlbaia integer,
	tse_bipevla integer
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_pevtaxation
   ON pevtaxation (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE pevprincipale (
	pevprincipale character varying (20),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	invar character varying (10),
	dnupev character varying (3),
	pev character varying (17),
	dnudes character varying (3),
	dep1_cconad character varying (2),
	dep1_dsueic integer,
	dep1_dcimei numeric(2,1),
	dep2_cconad character varying (2),
	dep2_dsueic integer,
	dep2_dcimei numeric(2,1),
	dep3_cconad character varying (2),
	dep3_dsueic integer,
	dep3_dcimei numeric(2,1),
	dep4_cconad character varying (2),
	dep4_dsueic integer,
	dep4_dcimei numeric(2,1),
	geaulc character varying (1),
	gelelc character varying (1),
	gesclc character varying (1),
	ggazlc character varying (1),
	gasclc character varying (1),
	gchclc character varying (1),
	gvorlc character varying (1),
	gteglc character varying (1),
	dnbbai character varying (2),
	dnbdou character varying (2),
	dnblav character varying (2),
	dnbwc character varying (2),
	deqdha integer,
	dnbppr character varying (2),
	dnbsam character varying (2),
	dnbcha character varying (2),
	dnbcu8 character varying (2),
	dnbcu9 character varying (2),
	dnbsea character varying (2),
	dnbann character varying (2),
	dnbpdc character varying (2),
	dsupdc integer,
	dmatgm character varying (2),
	dmatto character varying (2),
	jannat character varying (4),
	detent character varying (1),
	dnbniv character varying (2)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_pevprincipale
   ON pevprincipale (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE pevprofessionnelle (
	pevprofessionnelle character varying (20),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	invar character varying (10),
	dnupev character varying (3),
	pev character varying (17),
	dnudes character varying (3),
	vsupot character varying (9),
	vsurz1 character varying (9),
	vsurz2 character varying (9),
	vsurz3 character varying (9),
	vsurzt integer,
	vsurb1 character varying (9),
	vsurb2 character varying (9)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_pevprofessionnelle
   ON pevprofessionnelle (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE pevdependances (
	pevdependances character varying (20),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	invar character varying (10),
	dnupev character varying (3),
	pev character varying (17),
	dnudes character varying (3),
	dsudep integer,
	cconad character varying (2),
	asitet character varying (6),
	dmatgm character varying (2),
	dmatto character varying (2),
	detent character varying (1),
	geaulc character varying (1),
	gelelc character varying (1),
	gchclc character varying (1),
	dnbbai character varying (2),
	dnbdou character varying (2),
	dnblav character varying (2),
	dnbwc character varying (2),
	deqtlc integer,
	dcimlc numeric(2,1),
	dcetde numeric(3,2),
	dcspde character varying (3)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_pevdependances
   ON pevdependances (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE proprietaire (
	proprietaire character varying (20),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	dnupro character varying (6),
	comptecommunal character varying (12),
	dnulp character varying (2),
	ccocif character varying (4),
	dnuper character varying (6),
	ccodro character varying (1),
	ccodem character varying (1),
	gdesip character varying (1),
	gtoper character varying (1),
	ccoqua character varying (1),
	gnexcf character varying (2),
	dtaucf character varying (3),
	dnatpr character varying (3),
	ccogrm character varying (2),
	dsglpm character varying (10),
	dforme character varying (7),
	ddenom character varying (60),
	gtyp3 character varying (1),
	dlign3 character varying (30),
	gtyp4 character varying (1),
	dlign4 character varying (36),
	gtyp5 character varying (1),
	dlign5 character varying (30),
	gtyp6 character varying (1),
	dlign6 character varying (32),
	ccopay character varying (3),
	ccodep1a2 character varying (2),
	ccodira character varying (1),
	ccocom_adr character varying (3),
	ccovoi character varying (5),
	ccoriv character varying (4),
	dnvoiri character varying (4),
	dindic character varying (1),
	ccopos character varying (5),
	dnirpp character varying (10),
	dqualp character varying (3),
	dnomlp character varying (30),
	dprnlp character varying (15),
	jdatnss date,
	dldnss character varying (58),
	epxnee character varying (3),
	dnomcp character varying (30),
	dprncp character varying (15),
	topcdi character varying (1),
	oriard character varying (1),
	fixard character varying (1),
	datadr character varying (8),
	topdec character varying (1),
	datdec character varying (4),
	dsiren character varying (10),
	ccmm character varying (1),
	topja character varying (1),
	datja date,
	anospi character varying (3),
	cblpmo character varying (1),
	gtodge character varying (1),
	gpctf character varying (1),
	gpctsb character varying (1),
	jmodge character varying (2),
	jandge character varying (4),
	jantfc character varying (4),
	jantbc character varying (4)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_proprietaire
   ON proprietaire (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE comptecommunal (
	comptecommunal character varying (12),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	dnupro character varying (6),
	ajoutcoherence character varying(1)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_comptecommunal
   ON comptecommunal (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE pdl (
	pdl character varying (22),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	ccopre character varying (3),
	ccosec character varying (2),
	dnupla character varying (4),
	parcelle character varying(19),
	dnupdl character varying (3),
	dnivim character varying (1),
	ctpdl character varying (3),
	dmrpdl character varying (20),
	gprmut character varying (1),
	dnupro character varying (6),
	comptecommunal character varying (12),
	ccocif character varying (4)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_pdl
   ON pdl (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE parcellecomposante(
	parcellecomposante character varying (31),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	ccopre character varying (3),
	ccosec character varying (2),
	dnupla character varying (4),
	parcelle character varying(19),
	dnupdl character varying (3),
	pdl character varying (22),
	ccoprea character varying (3),
	ccoseca character varying (2),
	dnuplaa character varying (4),
	parcellea character varying(19),
	ccocif character varying (4)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_parcellecomposante
   ON parcellecomposante (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE lots (
	lots character varying (29),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	ccopre character varying (3),
	ccosec character varying (2),
	dnupla character varying (4),
	parcelle character varying(19),
	dnupdl character varying (3),
	pdl character varying (22),
	dnulot character varying (7),
	cconlo character varying (1),
	dcntlo integer,
	dnumql integer,
	ddenql integer,
	dfilot character varying (20),
	datact date,
	dnuprol character varying (6),
	comptecommunal character varying (12),
	dreflf character varying (5),
	ccocif character varying (4)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_lots
   ON lots (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX idx_lots_tmp1 
   ON lots (annee, ccodep, ccodir, ccocom, dnuprol);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE lotslocaux (
	lotslocaux character varying (39),
	annee character varying (4),
	ccodepl character varying (2),
	ccodirl character varying (1),
	ccocoml character varying (3),
	ccoprel character varying (3),
	ccosecl character varying (2),
	dnuplal character varying (4),
	dnupdl character varying (3),
	dnulot character varying (7),
	lots character varying (29),
	ccodebpb character varying (2),
	ccodird character varying (1),
	ccocomb character varying (3),
	ccopreb character varying (3),
	invloc character varying (10),
	local00 character varying (14),
	local10 character varying (14),
	dnumql character varying (7),
	ddenql character varying (7)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_lotslocaux
   ON lotslocaux (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE commune (
	commune character varying (10),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	clerivili character varying (1),
	libcom character varying (30),
	typcom character varying (1),
	ruract character varying (1),
	carvoi character varying (1),
	indpop character varying (1),
	poprel integer,
	poppart integer,
	popfict integer,
	annul character varying (1),
	dteannul character varying (7),
	dtecreart character varying (7),
	codvoi character varying (5),
	typvoi character varying (1),
	indldnbat character varying (1),
	motclas character varying (8),
	geo_commune character varying(7)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_commune
   ON commune (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
CREATE TABLE voie (
	voie character varying (15),
	annee character varying (4),
	ccodep character varying (2),
	ccodir character varying (1),
	ccocom character varying (3),
	commune character varying (10),
	natvoiriv character varying (1),
	ccoriv character varying (4),
	clerivili character varying (1),
	natvoi character varying (4),
	libvoi character varying (26),
	typcom character varying (1),
	ruract character varying (1),
	carvoi character varying (1),
	indpop character varying (1),
	poprel character varying (7),
	poppart integer,
	popfict integer,
	annul character varying (1),
	dteannul character varying (7),
	dtecreart character varying (7),
	codvoi character varying (5),
	typvoi character varying (1),
	indldnbat character varying (1),
	motclas character varying (8)
) WITH(OIDS=TRUE);
**************************

CREATE TABLE
********* QUERY **********
CREATE INDEX idxan_voie
   ON voie (annee ASC NULLS LAST);
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE parcelle IS 'Article descriptif de parcelle';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccodep IS 'Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccodir IS 'Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccocom IS 'Code commune INSEE ou DGI d’arrondissement - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccopre IS 'Préfixe de section ou quartier servi pour les communes associées. - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccosec IS 'Section cadastrale - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dnupla IS 'Numéro de plan - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dcntpa IS 'Contenance de la parcelle - en centiares';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dsrpar IS 'Lettre de série-role - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dnupro IS 'Compte communal du propriétaire de la parcelle - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.jdatat IS 'Date de l acte - jjmmaaaa';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dreflf IS 'Référence au Livre Foncier en Alsace-Moselle - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.gpdl IS 'Indicateur d’appartenance à pdl Identifiant de la pdl - cf. détail supra si gpdl =2';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.cprsecr IS 'Préfixe de la parcelle de référence - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccosecr IS 'Section de la parcelle de référence - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dnuplar IS 'N° de plan de la parcelle de référence - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dnupdl IS 'Numéro d’ordre de la pdl - en général, 001';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.gurbpa IS 'Caractère Urbain de la parcelle - U, * ou blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dparpi IS 'Numéro de parcelle primitive - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccoarp IS 'Indicateur d’arpentage - A ou blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.gparnf IS 'Indicateur de parcelle non figurée au plan - 1 = figurée, 0 = non figurée';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.gparbat IS 'Indicateur de parcelle référençant un bâtiment - 1 = oui, sinon 0';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.parrev IS 'Info de la révision - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.gpardp IS 'parcelle n''appartenant pas au domaine public - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.fviti IS 'parcelle au casier viticole  Adresse de la parcelle - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dnvoiri IS 'Numéro de voirie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dindic IS 'Indice de répétition - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccovoi IS 'Code Majic2 de la voie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccoriv IS 'Code Rivoli de la voie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccocif IS 'Code du cdif (code topad) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.gpafpd IS 'Domanialité, représentation au plan - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.cconvo IS 'Code nature de la voie';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dvoilib IS 'Libellé de la voie';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccocomm IS 'Code INSEE de la commune de la parcelle mère';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccoprem IS 'Code du préfixe de section de la parcelle mère';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.ccosecm IS 'Code section de la parcelle mère';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.dnuplam IS 'Numéro de plan de la parcelle mère';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.parcellefiliation IS 'Parcelle en filiation';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcelle.type_filiation IS 'Type de filiation (D, R, T ou blanc)';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE suf IS 'Article descriptif de suf';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.ccodep IS 'Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.ccodir IS 'Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.ccocom IS 'Code commune INSEE ou DGI d’arrondissement - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.ccopre IS 'Préfixe de section ou quartier servi pour les communes associées - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.ccosec IS 'Section cadastrale - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.dnupla IS 'Numéro de plan - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.ccosub IS 'Lettres indicatives de suf - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.dcntsf IS 'Contenance de la suf - en centiares';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.dnupro IS 'Compte communal du propriétaire de la suf - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.gnexps IS 'Code exonération permanente - ep cd cr dr ni rt';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.drcsub IS 'Revenu cadastral en valeur actualise référence 1980 - Exprimé Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.drcsuba IS 'Revenu cadastral revalorisé en valeur du 01-01 de l’année - Exprimé en Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.ccostn IS 'Série-tarif - A à Z, sauf I,O,Q';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.cgrnum IS 'Groupe de nature de culture - 01 à 13';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.dsgrpf IS 'Sous-groupe alphabétique - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.dclssf IS 'Classe dans le groupe et la série-tarif - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.cnatsp IS 'code nature de culture spéciale - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.drgpos IS 'Top terrain constructible Liaison avec un lot de pdl - « 0 » ou « 1 » ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.ccoprel IS 'Préfixe de la parcelle identifiant le lot - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.ccosecl IS 'Section de la parcelle identifiant le lot - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.dnuplal IS 'N° de plan de la parcelle de référence - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.dnupdl IS 'Numéro d ordre de la pdl - en général, 001';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.dnulot IS 'Numéro du lot - Le lot de BND se présente sous la forme 00Axxxx - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.rclsi IS 'Données classement révisé - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.gnidom IS 'Indicateur de suf non imposable - * ou blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.topja IS 'Indicateur jeune agriculteur - J ou blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.datja IS 'Date d’installation jeune agriculteur - peut être servie si topja = J';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.postel IS 'Indicateur de bien appartenant à la Poste - X ou blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suf.drgpos is 'Top terrain constructible Liaison avec un lot de pdl - « 0 » ou « 9 » ';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE sufexoneration IS 'Article exonération de suf';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.ccodep IS 'Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.ccodir IS 'Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.ccocom IS 'Code commune INSEE ou DGI d’arrondissement - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.ccopre IS 'Préfixe de section ou quartier servi pour les communes associées - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.ccosec IS 'Section cadastrale - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.dnupla IS 'Numéro de plan - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.ccosub IS 'Lettres indicatives de suf - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.rnuexn IS 'Numéro d ordre d’exonération temporaire - 01 à 04';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.vecexn IS 'Montant de VL sur lequel porte l’exonération - en Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.ccolloc IS 'Collectivité accordant l’exonération - TC, C, R d OU GC';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.pexn IS 'Pourcentage d’exonération - 100';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.gnexts IS 'Code d’exonération temporaire - TA TR NO PB PP PR PF ER TU OL HP HR ou NA';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.jandeb IS 'Année de début d’exonération - à blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.jfinex IS 'Année de retour à imposition - à blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.fcexn IS 'Fraction de vecsuf exonérée - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.fcexna IS 'fcexn en année N - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.rcexna IS 'revenu (4/5 fcexna) correspondant - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.rcexnba IS 'Revenu cadastral exonéré, en valeur de l’année - Exprimé en Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN sufexoneration.mpexnba IS 'Fraction majo TC exonérée, en valeur de l’année - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE suftaxation IS 'Article taxation de suf';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.ccodep IS 'Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.ccodir IS 'Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.ccocom IS 'Code commune INSEE ou DGI d’arrondissement - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.ccopre IS 'Préfixe de section ou quartier servi pour les communes associées - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.ccosec IS 'Section cadastrale - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.dnupla IS 'Numéro de plan - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.ccosub IS 'Lettres indicatives de suf - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.c1majposa IS 'c1 - Montant de la majoration terrain constructible. Servi pour la part communale. Toujours à zéro pour autres collectivités. - exprimé en Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.c1bisufad IS 'c1 - Base d’imposition de la suf en valeur de l’année - exprimé en Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.c2majposa IS 'c2 - Montant de la majoration terrain constructible. Servi pour la part communale. Toujours à zéro pour autres collectivités. - exprimé en Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.c2bisufad IS 'c2 - Base d’imposition de la suf en valeur de l’année - exprimé en Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.c3majposa IS 'c3 - Montant de la majoration terrain constructible. Servi pour la part communale. Toujours à zéro pour autres collectivités. - exprimé en Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.c3bisufad IS 'c3 - Base d’imposition de la suf en valeur de l’année - exprimé en Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.c4majposa IS 'c4 - Montant de la majoration terrain constructible. Servi pour la part communale. Toujours à zéro pour autres collectivités. - exprimé en Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.c4bisufad IS 'c4 - Base d’imposition de la suf en valeur de l’année - exprimé en Euros';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN suftaxation.cntmajtc IS 'Nouvelle contenance suf pour calcul majorationn TC';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE local00 IS 'Article identifiant du local';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.ccodep IS 'code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.ccodir IS 'code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.ccocom IS 'code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.invar IS 'numéro invariant - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.ccopre IS 'préfixe de section ou quartier servi pour les communes associées, - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.ccosec IS 'lettres de section - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.dnupla IS 'numéro de plan - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.dnubat IS 'lettre de bâtiment - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.descr IS 'numéro d’entrée - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.dniv IS 'niveau étage - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.dpor IS 'numéro de local - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.ccoriv IS 'Code Rivoli de la voie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.ccovoi IS 'Code Majic2 de la voie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.dnvoiri IS 'Numéro de voirie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.dindic IS 'indice de répétition - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.ccocif IS 'code du cdi/cdif (code topad) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.dvoilib IS 'libelle de la voie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.cleinvar IS 'clé alpha no invariant - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local00.locinc IS 'code local sans évaluation - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE local10 IS 'Article identifiant du local';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.ccodep IS 'code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.ccodir IS 'code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.ccocom IS 'code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.invar IS 'numéro invariant - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.gpdl IS 'indicateur d’appartenance à un lot de pdl - 1 = oui, sinon 0';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dsrpar IS 'lettre de série rôle - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dnupro IS 'compte communal de propriétaire - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.jdatat IS 'date d’acte de mutation - jjmmaaaa';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dnufnl IS 'compte communal de fonctionnaire logé - redevable de la tom';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.ccoeva IS 'code évaluation - A B C D E T tableau 2.3.1';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.ccitlv IS 'local imposable à la taxe sur les locaux vacants - indisponible';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dteloc IS 'type de local - 1 à 8 tableau 2.3.2';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.gtauom IS 'zone de ramassage des ordures ménagères - P RA RB RC RD ou blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dcomrd IS 'Pourcentage de réduction sur tom - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.ccoplc IS 'Code de construction particulière - R U V W X Y Z ou blanc tabl. 2.3.3';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.cconlc IS 'Code nature de local - voir tableau 2.3.4';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dvltrt IS 'Valeur locative totale retenue pour le local - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.ccoape IS 'Code NAF pour les locaux professionnels - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.cc48lc IS 'Catégorie de loi de 48 - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dloy48a IS 'Loyer de 48 en valeur de l’année - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.top48a IS 'top taxation indiquant si la pev est impose au loyer ou a la vl - 1 = loyer o = vl';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dnatlc IS 'Nature d occupation - A P V L T D tableau 2.3.6';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dnupas IS 'no passerelle TH/TP - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.gnexcf IS 'code nature exo ecf - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dtaucf IS 'taux exo ecf - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.cchpr IS 'Top indiquant une mutation propriétaire - * ou blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.jannat IS 'Année de construction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dnbniv IS 'Nombre de niveaux de la construction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.hlmsem IS 'Local appartenant à hlm ou sem - 5 = hlm, 6 = sem, sinon blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.postel IS 'Local de Poste ou France Telecom - X, Y, Z, ou blanc ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dnatcg IS 'Code nature du changement évaluation - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.jdatcgl IS 'date constatation changement - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dnutbx IS 'no gestionnaire déclarant taxe bureaux - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.dvltla IS 'VL totale du local actualisée - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.janloc IS 'Année de création du local - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.ccsloc IS 'Code cause création du local - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.fburx IS 'Indicateur présence bureaux - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.gimtom IS 'Indicateur imposition OM exploitable à partir de 2002  - D, E, V ou blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.cbtabt IS 'Code exonération HLM zone sensible - ZS, ZT ou blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.jdtabt IS 'Année début d’exonération ZS - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.jrtabt IS 'Année fin d’exonération ZS - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN local10.jacloc IS 'Année d’achèvement du local - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE pev IS 'Article descriptif de pev';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.ccodep IS 'Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.ccodir IS 'Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.ccocom IS 'Code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.invar IS 'Numéro invariant - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.dnupev IS 'Numéro de pev - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.ccoaff IS 'Affectation de la pev - H P L S K tableau 2.3.7';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.ccostb IS 'lettre de série tarif bâtie ou secteur locatif - A à Z sauf';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.dcapec IS 'Catégorie - Commentaires 2.2.3';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.dcetlc IS 'Coefficient d entretien - 9V99';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.dcsplc IS 'Coefficient de situation particulière - S9V99';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.dsupot IS 'Surface pondérée - Présence non systématique';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.dvlper IS 'Valeur locative de la pev, en valeur de référence (1970) sauf pour les établissements de code évaluation A - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.dvlpera IS 'Valeur locative de la pev, en valeur de l’année - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.gnexpl IS 'Nature d’exonération permanente - Gérée dans pour les tableau 2.3.8';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.libocc IS 'nom de l occupant INDISPONIBLE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.ccthp IS 'Code occupation à la Th ou à la TP - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.retimp IS 'Top : retour partiel ou total à imposition - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.dnuref IS 'Numéro de local type - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.rclsst IS 'Données reclassement - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.gnidom IS 'Top : pev non imposable (Dom) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.dcsglc IS 'Coefficient de situation générale - S9V99';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.ccogrb IS 'Code groupe bâti révisé - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.cocdi IS 'Code cdi topad - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.cosatp IS 'Code service topad - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.gsatp IS 'Nature service gérant tp - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.clocv IS 'Indicateur local vacant - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.dvltpe IS 'VL TOTALE DE LA PEV MAJIC2 - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pev.dcralc IS 'correctif d’ascenseur - format S9V99';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE pevexoneration IS 'Article exonération de pev';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.ccodep IS 'Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.ccodir IS 'Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.ccocom IS 'Code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.invar IS 'Numéro invariant - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.Janbil IS 'Année d’immobilisation - servie pour ets. industriels';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.dnupev IS 'Numéro de pev - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.dnuexb IS 'Numéro d’ordre de l’article - 001 à 015';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.ccolloc IS 'Code de collectivité locale accordant l’exonération - C D R TC tableau 2.3.9';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.pexb IS 'Taux d’exonération accordée - 999V99';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.gnextl IS 'Nature d’exonération temporaire (et permanente pour ets. Industriels) - tableau des codes 2.3.10 et 2.3.8';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.jandeb IS 'année de début d’exonération - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.janimp IS 'année de retour à imposition - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.vecdif IS 'montant saisi de l’EC bénéficiant exo - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.vecdifa IS 'vecdif multiplié par coeff - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.fcexb IS 'Fraction EC exonérée - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.fcexba IS 'fcexb multiplié par coeff - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.rcexba IS 'revenu cadastral exonéré - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.dvldif2 IS 'Montant de VL exonérée (valeur 70) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.dvldif2a IS 'Montant de VL exonérée (valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.fcexb2 IS 'Fraction de VL exonérée (valeur 70) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.fcexba2 IS 'Fraction de VL exonérée (valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevexoneration.rcexba2 IS 'Revenu cadastral exonéré (valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE pevtaxation IS 'Article taxation de pev';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.ccodep IS 'Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.ccodir IS 'Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.ccocom IS 'Code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.invar IS 'Numéro invariant - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.janbil IS 'Année d’immobilisation - High value pour ets. Industriels';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.dnupev IS 'Numéro de pev - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.co_vlbai IS 'Commune - Part de VL imposée (valeur70) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.co_vlbaia IS 'Commune - Part de VL imposée (valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.co_bipevla IS 'Commune - Base d’imposition de la pev(valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.de_vlbai IS 'Département - Part de VL imposée (valeur70) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.de_vlbaia IS 'Département - Part de VL imposée (valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.de_bipevla IS 'Département - Base d’imposition de la pev(valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.re_vlbai IS 'Région (avant 2012) - Part de VL imposée (valeur70) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.re_vlbaia IS 'Région (avant 2012) - Part de VL imposée (valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.re_bipevla IS 'Région (avant 2012) - Base d’imposition de la pev(valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.gp_vlbai IS 'Groupement de commune - Part de VL imposée (valeur70) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.gp_vlbaia IS 'Groupement de commune - Part de VL imposée (valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.gp_bipevla IS 'Groupement de commune - Base d’imposition de la pev(valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.bateom IS 'BASE ORDURES MENAGERES - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.baomec IS 'BASE ORDURES MENAGERES ECRETEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.tse_vlbai IS 'TSE (à partir de 2012) - Part de VL imposée (valeur70) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.tse_vlbaia IS 'TSE (à partir de 2012) - Part de VL imposée (valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevtaxation.tse_bipevla IS 'TSE (à partir de 2012) - Base d’imposition de la pev(valeur de l’année) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE pevprincipale IS 'Article descriptif partie principale habitation';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.ccodep IS 'Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.ccodir IS 'Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.ccocom IS 'Code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.invar IS 'Numéro invariant - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnupev IS 'Numéro de pev - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnudes IS 'Numéro d’ordre de descriptif - bHb, bHA...';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep1_cconad IS 'Dépendance 1 - Nature de dépendance - Tableau 2.3.5';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep1_dsueic IS 'Dépendance 1 - Surface réelle de l’élément incorporé - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep1_dcimei IS 'Dépendance 1 - Coefficient de pondération - 9V9';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep2_cconad IS 'Dépendance 2 - Nature de dépendance - Tableau 2.3.5';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep2_dsueic IS 'Dépendance 2 - Surface réelle de l’élément incorporé - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep2_dcimei IS 'Dépendance 2 - Coefficient de pondération - 9V9';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep3_cconad IS 'Dépendance 3 - Nature de dépendance - Tableau 2.3.5';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep3_dsueic IS 'Dépendance 3 - Surface réelle de l’élément incorporé - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep3_dcimei IS 'Dépendance 3 - Coefficient de pondération - 9V9';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep4_cconad IS 'Dépendance 4 - Nature de dépendance - Tableau 2.3.5';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep4_dsueic IS 'Dépendance 4 - Surface réelle de l’élément incorporé - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dep4_dcimei IS 'Dépendance 4 - Coefficient de pondération - 9V9';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.geaulc IS 'Présence d’eau - O = oui, N = non';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.gelelc IS 'Présence d’électricité - O = oui, N = non';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.gesclc IS 'Présence d’escalier de service (appartement) - O = oui, N = non, blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.ggazlc IS 'Présence du gaz - O = oui, N = non';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.gasclc IS 'Présence d’ascenseur (appartement) - O = oui, N = non, blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.gchclc IS 'Présence du chauffage central - O = oui, N = non';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.gvorlc IS 'Présence de vide-ordures (appartement)  - O = oui, N = non, blanc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.gteglc IS 'Présence du tout à l’égout - O = oui, N = non';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbbai IS 'Nombre de baignoires - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbdou IS 'Nombre de douches - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnblav IS 'Nombre de lavabos - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbwc IS 'Nombre de WC - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.deqdha IS 'Equivalence superficielle des éléments de confort Répartition des pièces - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbppr IS 'Nombre de pièces principales - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbsam IS 'Nombre de salles à manger - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbcha IS 'Nombre de chambres - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbcu8 IS 'Nombre de cuisines de moins de 9 m2 - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbcu9 IS 'Nombre de cuisines d’au moins 9 m2 - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbsea IS 'Nombre de salles d’eau - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbann IS 'Nombre de pièces annexes - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbpdc IS 'Nombre de pièces - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dsupdc IS 'Superficie des pièces - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dmatgm IS 'Matériaux des gros murs - 0 indéterminé 1 pierre 2 meulière 3 béton 4 briques 5 aggloméré 6 bois 9 autres ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dmatto IS 'Matériaux des toitures - 0 indéterminé 1 tuiles 2 ardoises 3 zinc aluminium 4 béton';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.jannat IS 'Année d’achèvement - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.detent IS 'état d’entretien - 1 bon 2 assez bon 3 passable 4 médiocre 5 mauvais';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprincipale.dnbniv IS 'Nombre de niveaux - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE pevprofessionnelle IS 'Article descriptif professionnel';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.ccodep IS 'Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.ccodir IS 'Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.ccocom IS 'Code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.invar IS 'Numéro invariant - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.dnupev IS 'Numéro de pev - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.dnudes IS 'Numéro d’ordre de descriptif - P01';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.vsupot IS 'surface pondérée - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.vsurz1 IS 'Surface réelle totale zone 1 - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.vsurz2 IS 'Surface réelle totale zone 2 - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.vsurz3 IS 'Surface réelle totale zone 3 - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.vsurzt IS 'Surface réelle totale - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.vsurb1 IS 'surface réelle des bureaux 1 - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevprofessionnelle.vsurb2 IS 'surface réelle des bureaux 2 - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE pevdependances IS 'Article descriptif de dépendance';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.ccodep IS 'Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.ccodir IS 'Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.ccocom IS 'Code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.invar IS 'Numéro invariant - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dnupev IS 'Numéro de pev - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dnudes IS 'Numéro d’ordre de descriptif - 001, 002';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dsudep IS 'Surface réelle de la dépendance - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.cconad IS 'Nature de dépendance - cf tableau des codes';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.asitet IS 'Localisation (bat, esc, niv) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dmatgm IS 'Matériaux des gros murs - 0 à 9 cf art 40';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dmatto IS 'Matériaux des toitures - 0 à 4 cf art 40';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.detent IS 'état d''entretien - 1 à 5 cf art 40';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.geaulc IS 'Présence d''eau - O = oui, N = non';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.gelelc IS 'Présence d’électricité - O = oui, N = non';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.gchclc IS 'Présence du chauffage central - O = oui, N = non';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dnbbai IS 'Nombre de baignoires - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dnbdou IS 'Nombre de douches - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dnblav IS 'Nombre de lavabos - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dnbwc IS 'Nombre de WC - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.deqtlc IS 'Equivalence superficielle des - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dcimlc IS 'Coefficient de pondération - 1,0 - 0,2 à 0,6';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dcetde IS 'Coefficient d entretien - 9V99';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pevdependances.dcspde IS 'Coefficient de situation particulière - S9V99 de -0,10 à +0,10';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE proprietaire IS 'Propriétaire';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccodep IS 'code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccodir IS 'code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccocom IS 'code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dnupro IS 'compte communal - cgroup groupe de compte communal + * A B .. - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dnulp IS 'numéro de libellé partiel - 01 à 06';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccocif IS 'code cdif - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dnuper IS 'numéro de personne dans le cdif - Il s’agit du numéro de personne ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccodro IS 'code du droit réel ou particulier - Nouveau code en 2009 : C (fiduciaire)';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccodem IS 'code du démembrement/indivision - C S L I V';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.gdesip IS 'indicateur du destinataire de l’avis d’imposition - 1 = oui, 0 = non';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.gtoper IS 'indicateur de personne physique ou morale - 1 = physique, 2 = morale';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccoqua IS 'Code qualité de personne physique - 1, 2 ou 3';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.gnexcf IS 'code exo ecf - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dtaucf IS 'taux exo ecf - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dnatpr IS 'Code nature de personne physique ou morale - Voir $ 2.2.7';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccogrm IS 'Code groupe de personne morale - 0 à 9 - 0A à 9A';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dsglpm IS 'sigle de personne morale - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dforme IS 'forme juridique abrégée majic2 X Données Générales - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ddenom IS 'Dénomination de personne physique ou morale - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.gtyp3 IS 'type de la 3eme ligne d’adresse - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.gtyp4 IS 'Type de la 4eme ligne d’adresse - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.gtyp5 IS 'type de la 5eme ligne d’adresse - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.gtyp6 IS 'type de la 6eme ligne d’adresse - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dlign3 IS '3eme ligne d’adresse - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dlign4 IS '4eme ligne d’adresse - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dlign5 IS '5eme ligne d’adresse - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dlign6 IS '6eme ligne d’adresse X Codification de l’adresse - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccopay IS 'code de pays étranger et TOM - non servi pour France métropole et Dom';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccodep1a2 IS 'Code département de l’adresse - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccodira IS 'Code direction de l’adresse - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccocom_adr IS 'Code commune de l’adresse - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccovoi IS 'Code majic2 de la voie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccoriv IS 'Code rivoli de la voie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dnvoiri IS 'numéro de voirie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dindic IS 'indice de répétition de voirie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccopos IS 'Code postal X Dénomination formatée de personne physique - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dnirpp IS 'zone à blanc - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dqualp IS 'Qualité abrégée - M, MME ou MLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dnomlp IS 'Nom d’usage - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dprnlp IS 'Prénoms associés au nom d’usage - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.jdatnss IS 'date de naissance - sous la forme jj/mm/aaaa';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dldnss IS 'lieu de naissance - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.epxnee IS 'mention du complément - EPX ou NEE si complément';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dnomcp IS 'Nom complément - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dprncp IS 'Prénoms associés au complément - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.topcdi IS 'top transalp - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.oriard IS 'origine adresse - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.fixard IS 'pérennité adresse - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.datadr IS 'date adresse - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.topdec IS 'origine décès - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.datdec IS 'date de décès - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.dsiren IS 'numéro siren - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.ccmm IS 'création compte cadastral - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.topja IS 'indic jeune agriculteur - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.datja IS 'date jeune agriculteur - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.anospi IS 'ano transalp - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.cblpmo IS 'code blocage caractère personne morale - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.gtodge IS 'top appartenance à la DGE - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.gpctf IS 'top paiement centralisé à la taxe foncière - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.gpctsb IS 'top paiement centralisé à la TSBCS - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.jmodge IS 'mois d’entrée à la DGE - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.jandge IS 'année d’entrée à la DGE - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.jantfc IS 'année d’entrée paiement TF - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN proprietaire.jantbc IS 'année d’entrée paiement TSBCS - INDISPONIBLE';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE pdl IS 'Propriétés divisées en lots';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.ccodep IS 'code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.ccodir IS 'code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.ccocom IS 'code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.ccopre IS 'code du préfixe - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.ccosec IS 'lettres de section - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.dnupla IS 'numéro de plan - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.dnupdl IS 'no de pdl - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.dnivim IS 'niveau imbrication - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.ctpdl IS 'type de pdl - bnd, cl, cv, tf, clv, mp.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.dmrpdl IS 'lot mère(plan+pdl+lot) - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.gprmut IS 'top ''1ere mut effectuée - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.dnupro IS 'compte de la pdl - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN pdl.ccocif IS 'code cdif - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE lots IS 'Article descriptif du lot';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.ccodep IS 'code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.ccodir IS 'code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.ccocom IS 'code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.ccopre IS 'code du préfixe - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.ccosec IS 'lettres de section - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.dnupla IS 'numéro de plan - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.dnupdl IS 'no de pdl - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.dnulot IS 'Numéro de lot - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.cconlo IS 'Code nature du lot - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.dcntlo IS 'Superficie du lot - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.dnumql IS 'Numérateur - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.ddenql IS 'Dénominateur - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.dfilot IS 'pdl-fille du lot - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.datact IS 'date de l''acte - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.dnuprol IS 'Compte du lot - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.dreflf IS 'Référence livre foncier - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lots.ccocif IS 'code cdif - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE parcellecomposante IS 'Parcelle composante de la pdl autre que la parcelle de référence';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcellecomposante.ccodep IS 'code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcellecomposante.ccodir IS 'code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcellecomposante.ccocom IS 'code commune INSEE - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcellecomposante.ccopre IS 'code du préfixe - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcellecomposante.ccosec IS 'lettres de section - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcellecomposante.dnupla IS 'numéro de plan - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcellecomposante.dnupdl IS 'no de pdl - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcellecomposante.ccoprea IS 'code du préfixe - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcellecomposante.ccoseca IS 'lettres de section - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcellecomposante.dnuplaa IS 'numéro de plan - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN parcellecomposante.ccocif IS 'code cdif - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE lotslocaux IS 'Article descriptif du lot';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.ccodepl IS 'Lot - Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.ccodirl IS 'Lot - Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.ccocoml IS 'Lot - Code INSEE de la commune - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.ccoprel IS 'Lot - Code préfixe - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.ccosecl IS 'Lot - Code section - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.dnuplal IS 'Lot - Numéro du plan - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.dnupdl IS 'Lot - Numéro de PDL - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.dnulot IS 'Lot - Numéro de lot - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.ccodebpb IS 'Local - Code département - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.ccodird IS 'Local - Code direction - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.ccocomb IS 'Local - Code commune - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.ccopreb IS 'Local - Code préfixe - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.invloc IS 'Local - Numéro invariant du local - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.dnumql IS 'Local - Numérateur du lot - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN lotslocaux.ddenql IS 'Local - Dénominateur du lot - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE commune IS 'Commune (Fantoir)';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.ccodep IS 'Code département - Code département INSEE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.ccodir IS 'Code direction - Code direction dge';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.ccocom IS 'Code commune - code commune définie par Majic2';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.clerivili IS 'Clé RIVOLI - zone alphabétique fournie par MAJIC2';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.libcom IS 'Libellé - désignation de la commune';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.typcom IS 'Type de commune actuel (R ou N) - N - commune rurale, R - commune rencencée';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.ruract IS 'RUR actuel - indique si la commune est pseudo-recensée ou non (3-commune pseudo-recensée, blanc si rien)';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.carvoi IS 'caractère de voie - zone indiquant si la voie est privée (1) ou publique (0)';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.indpop IS 'indicateur de population - Précise la dernière situation connue de la commune au regard de la limite de 3000 habitants (= blanc si < 3000 h sinon = *).';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.poprel IS 'population réelle - dénombre la population recencée lors du dernier recensement';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.poppart IS 'population à part - dénombre la population comptée à part dans la commune';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.popfict IS 'population fictive - population fictive de la commune';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.annul IS 'Annulation Cet article indique que plus aucune entité topo n’est représentée par ce code. - O - voie annulée sans transfert, Q - voie annulée avec transfert, Q - commune annulée avec transfert.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.dteannul IS 'date d''annulation - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.dtecreart IS 'Date de création de l''article - Date à laquelle l''article a été créé par création MAJIC2.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.codvoi IS 'Code identifiant la voie dans MAJIC2. - Permet de faire le lien entre le code voie RIVOLI et le code voie MAJIC2.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.typvoi IS 'Type de voie - Indicateur de la classe de la voie. - 1 - voie, 2 - ensemble immobilier, 3 - lieu-dit, 4 -  pseudo-voie, 5 - voie provisoire.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.indldnbat IS 'Indicateur lieu-dit non bâti - Zone servie uniquement pour les lieux-dits.Permet d’indiquer si le lieu-dit comporte ou non un bâtiment dans MAJIC.1 pour lieu-dit non bâti, 0 sinon.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN commune.motclas IS 'Mot classant - Dernier mot entièrement alphabétique du libellé de voie - Permet de restituer l''ordre alphabétique.';
**************************

COMMENT
********* QUERY **********
COMMENT ON TABLE voie IS 'Voie (Fantoir)';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.ccodep IS 'Code département - Code département INSEE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.ccodir IS 'Code direction - Code direction dge';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.ccocom IS 'Code commune - code commune définie par Majic2';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.natvoiriv IS 'Nature de voie rivoli - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.ccoriv IS 'Code voie Rivoli - identifiant de voie dans la commune';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.clerivili IS 'Clé RIVOLI - zone alphabétique fournie par MAJIC2';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.natvoi IS 'nature de voie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.libvoi IS 'libellé de voie - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.typcom IS 'Type de commune actuel (R ou N) - N - commune rurale, R - commune rencencée';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.ruract IS 'RUR actuel - indique si la commune est pseudo-recensée ou non (3-commune pseudo-recensée, blanc si rien)';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.carvoi IS 'caractère de voie - zone indiquant si la voie est privée (1) ou publique (0)';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.indpop IS 'indicateur de population - Précise la dernière situation connue de la commune au regard de la limite de 3000 habitants (= blanc si < 3000 h sinon = *).';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.poprel IS 'population réelle - dénombre la population recencée lors du dernier recensement';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.poppart IS 'population à part - dénombre la population comptée à part dans la commune';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.popfict IS 'population fictive - population fictive de la commune';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.annul IS 'Annulation Cet article indique que plus aucune entité topo n’est représentée par ce code. - O - voie annulée sans transfert, Q - voie annulée avec transfert, Q - commune annulée avec transfert.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.dteannul IS 'date d''annulation - ';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.dtecreart IS 'Date de création de l''article - Date à laquelle l''article a été créé par création MAJIC2.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.codvoi IS 'Code identifiant la voie dans MAJIC2. - Permet de faire le lien entre le code voie RIVOLI et le code voie MAJIC2.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.typvoi IS 'Type de voie - Indicateur de la classe de la voie. - 1 - voie, 2 - ensemble immobilier, 3 - lieu-dit, 4 -  pseudo-voie, 5 - voie provisoire.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.indldnbat IS 'Indicateur lieu-dit non bâti - Zone servie uniquement pour les lieux-dits.Permet d’indiquer si le lieu-dit comporte ou non un bâtiment dans MAJIC.1 pour lieu-dit non bâti, 0 sinon.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN voie.motclas IS 'Mot classant - Dernier mot entièrement alphabétique du libellé de voie - Permet de restituer l''ordre alphabétique.';
**************************

COMMENT
********* QUERY **********
CREATE TABLE gpdl (gpdl character varying(1),gpdl_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table gpdl add primary key (gpdl);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE gnexps (gnexps character varying (2),gnexps_lib character varying (150));
**************************

CREATE TABLE
********* QUERY **********
alter table gnexps add primary key (gnexps);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE cgrnum ( cgrnum character varying (2),cgrnum_lib character varying (150));
**************************

CREATE TABLE
********* QUERY **********
alter table cgrnum add primary key (cgrnum);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE dsgrpf (dsgrpf character varying(2),dsgrpf_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table dsgrpf add primary key (dsgrpf);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE cnatsp (cnatsp character varying(5),cnatsp_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table cnatsp add primary key (cnatsp);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ccolloc (ccolloc character varying(2),ccolloc_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table ccolloc add primary key (ccolloc);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE gnexts (gnexts character varying(2),gnexts_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table gnexts add primary key (gnexts);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ccoeva (ccoeva character varying(1),ccoeva_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table ccoeva add primary key (ccoeva);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE dteloc (dteloc character varying(1),dteloc_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table dteloc add primary key (dteloc);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ccoplc (ccoplc character varying(1),ccoplc_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table ccoplc add primary key (ccoplc);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE cconlc (cconlc character varying(2),cconlc_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table cconlc add primary key (cconlc);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE top48a (top48a character varying(1),top48a_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table top48a add primary key (top48a);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE dnatlc (dnatlc character varying(1),dnatlc_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table dnatlc add primary key (dnatlc);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE hlmsem (hlmsem character varying(1),hlmsem_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table hlmsem add primary key (hlmsem);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ccoaff (ccoaff character varying(1),ccoaff_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table ccoaff add primary key (ccoaff);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE gnexpl (gnexpl character varying(2),gnexpl_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table gnexpl add primary key (gnexpl);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE gnextl (gnextl character varying(2),gnextl_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table gnextl add primary key (gnextl);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE cconad (cconad character varying(2),cconad_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table cconad add primary key (cconad);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ctpdl (ctpdl character varying(3),ctpdl_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table ctpdl add primary key (ctpdl);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE cconlo (cconlo character varying(1),cconlo_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table cconlo add primary key (cconlo);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ccodro (ccodro character varying(1),ccodro_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table ccodro add primary key (ccodro);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ccodem (ccodem character varying(1),ccodem_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table ccodem add primary key (ccodem);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE gtoper (gtoper character varying(1),gtoper_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table gtoper add primary key (gtoper);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ccoqua (ccoqua character varying(1),ccoqua_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table ccoqua add primary key (ccoqua);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE dnatpr (dnatpr character varying(3),dnatpr_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table dnatpr add primary key (dnatpr);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ccogrm (ccogrm character varying(2),ccogrm_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table ccogrm add primary key (ccogrm);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE gtyp3 (gtyp3 character varying(1),gtyp3_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table gtyp3 add primary key (gtyp3);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE gtyp4 (gtyp4 character varying(1),gtyp4_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table gtyp4 add primary key (gtyp4);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE gtyp5 (gtyp5 character varying(1),gtyp5_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table gtyp5 add primary key (gtyp5);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE gtyp6 (gtyp6 character varying(1),gtyp6_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table gtyp6 add primary key (gtyp6);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE typcom (typcom character varying(1),typcom_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table typcom add primary key (typcom);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE natvoiriv (natvoiriv character varying(1),natvoiriv_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table natvoiriv add primary key (natvoiriv);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE carvoi (carvoi character varying(1),carvoi_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table carvoi add primary key (carvoi);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE annul (annul character varying(1),annul_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table annul add primary key (annul);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE typvoi (typvoi character varying(1),typvoi_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table typvoi add primary key (typvoi);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE indldnbat (indldnbat character varying(1),indldnbat_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
alter table indldnbat add primary key (indldnbat);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE geo_commune
(
  geo_commune character varying(7) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  idu character varying(3),
  tex2 character varying(80),
  creat_date date,
  update_dat date,
  commune character varying(10)
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_commune', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                         addgeometrycolumn                         
-------------------------------------------------------------------
 opencadastre.geo_commune.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_commune_geom_idx
  ON geo_commune
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_commune_annee_idx
  ON geo_commune
  (annee );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_commune IS 'Territoire contenant un nombre entier de subdivisions de section cadastrales';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_commune.geo_commune IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_commune.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_commune.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_commune.idu IS 'Code INSEE';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_commune.tex2 IS 'Nom commune';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_commune.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_commune.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_section
(
  geo_section character varying(12) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  idu character varying(8),
  tex character varying(2),
  geo_commune character varying(7) NOT NULL,
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_section', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                         addgeometrycolumn                         
-------------------------------------------------------------------
 opencadastre.geo_section.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_section_geom_idx
  ON geo_section
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_section_annee_idx
  ON geo_section
  (annee );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_section IS 'Partie du plan cadastral correspondant à une portion du territoire communal et comportant, suivant le cas, une ou plusieurs subdivisions de section';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_section.geo_section IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_section.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_section.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_section.idu IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_section.tex IS 'Lettre(s) de section';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_section.geo_commune IS 'Commune';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_section.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_section.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_qupl (geo_qupl character varying(2),geo_qupl_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE geo_qupl ADD PRIMARY KEY (geo_qupl);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE geo_copl (geo_copl character varying(2),geo_copl_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE geo_copl ADD PRIMARY KEY (geo_copl);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE geo_inp (geo_inp character varying(2),geo_inp_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE geo_inp ADD PRIMARY KEY (geo_inp);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE geo_subdsect
(
  geo_subdsect character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  idu character varying(10),
  geo_section character varying(12) NOT NULL,
  geo_qupl character varying(2),  
  geo_copl character varying(2),
  eor integer,  
  dedi date,
  icl integer,
  dis date,
  geo_inp character varying(2),
  dred date,
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_subdsect', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                         addgeometrycolumn                          
--------------------------------------------------------------------
 opencadastre.geo_subdsect.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_subdsect_geom_idx
  ON geo_subdsect
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_subdsect_annee_idx
  ON geo_subdsect
  (annee, object_rid);
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_subdsect IS 'Portion de section cadastrale disposant de caractéristiques propres au regard notamment de son échelle, sa qualité, son mode de confection. Une section a au moins une subdivision de section. Cet objet correspond à la feuille cadastrale.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.geo_subdsect IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.idu IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.geo_section IS 'Section';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.geo_qupl IS 'Qualité du plan';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.geo_copl IS 'Mode de confection';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.eor IS 'Échelle d''origine du plan (que le dénominateur)';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.dedi IS 'Date d''édition ou du confection du plan';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.icl IS 'Orientation d''origine (en grade)';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.dis IS 'Date d''incorporation PCI';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.geo_inp IS 'Mode d''incorporation au plan';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.dred IS 'Date de réédition';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdsect.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_indp (geo_indp character varying(2),geo_indp_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE geo_indp ADD PRIMARY KEY (geo_indp);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE geo_parcelle
(
  geo_parcelle character varying(16) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  idu character varying(12),
  geo_section character varying(12) NOT NULL,
  geo_subdsect character varying(14),
  supf numeric(10,3),
  geo_indp character varying(2),
  coar character varying(2),
  tex character varying(4),
  tex2 character varying(80),
  codm character varying(80),
  creat_date date,
  update_dat date,
  parcelle character varying(19)
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_parcelle', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                         addgeometrycolumn                          
--------------------------------------------------------------------
 opencadastre.geo_parcelle.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_parcelle', 'geom_uf', 2154 , 'MULTIPOLYGON', 2 );
**************************

                           addgeometrycolumn                           
-----------------------------------------------------------------------
 opencadastre.geo_parcelle.geom_uf SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_parcelle_geom_idx
  ON geo_parcelle
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_parcelle_annee_idx
  ON geo_parcelle
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_parcelle IS 'Portion de section cadastrale disposant de caractéristiques propres au regard notamment de son échelle, sa qualité, son mode de confection. Une section a au moins une subdivision de section. Cet objet correspond à la feuille cadastrale.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.geo_parcelle IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.idu IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.geo_section IS 'Section';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.supf IS 'Contenance MAJIC';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.geo_indp IS 'Figuration de la parcelle au plan';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.coar IS 'Code arpentage';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.tex IS 'Numéro parcellaire';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.tex2 IS 'tex2 - non documenté';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.codm IS 'codm - non documenté';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_parcelle.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_subdfisc
(
  geo_subdfisc character varying(15) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  tex character varying(1),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_subdfisc', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                         addgeometrycolumn                          
--------------------------------------------------------------------
 opencadastre.geo_subdfisc.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_subdfisc_geom_idx
  ON geo_subdfisc
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_subdfisc_annee_idx
  ON geo_subdfisc
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_subdfisc IS 'Partie d''une parcelle ayant une seule nature de culture ou de propriété et constituant une unité au regard de la fiscalité directe locale.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdfisc.geo_subdfisc IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdfisc.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdfisc.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdfisc.tex IS 'Lettre d''ordre';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdfisc.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdfisc.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_subdfisc_parcelle
(
  geo_subdfisc_parcelle serial NOT NULL,
  annee character varying(4) NOT NULL,
  geo_subdfisc character varying(15) NOT NULL,
  geo_parcelle character varying(16) NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
COMMENT ON TABLE geo_subdfisc_parcelle IS 'Lien subdivision fiscale - parcelle';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdfisc_parcelle.geo_subdfisc_parcelle IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdfisc_parcelle.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdfisc_parcelle.geo_subdfisc IS 'subdivision fiscale';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_subdfisc_parcelle.geo_parcelle IS 'geo_parcelle';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_voiep
(
  geo_voiep character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  tex character varying(80),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_voiep', 'geom', 2154 , 'POINT', 2 );
**************************

                    addgeometrycolumn                     
----------------------------------------------------------
 opencadastre.geo_voiep.geom SRID:2154 TYPE:POINT DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_voiep_geom_idx
  ON geo_voiep
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_voiep_annee_idx
  ON geo_voiep
  (annee );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_voiep IS 'Élément ponctuel permettant la gestion de l''ensemble immobilier auquel est associé son libellé.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_voiep.geo_voiep IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_voiep.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_voiep.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_voiep.tex IS 'Nom de la voie';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_voiep.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_voiep.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_numvoie
(
  geo_numvoie character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  tex character varying(5),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_numvoie', 'geom', 2154 , 'POINT', 2 );
**************************

                     addgeometrycolumn                      
------------------------------------------------------------
 opencadastre.geo_numvoie.geom SRID:2154 TYPE:POINT DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_numvoie_geom_idx
  ON geo_numvoie
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_numvoie_annee_idx
  ON geo_numvoie
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_numvoie IS 'Numéro correspondant à l''adresse de la parcelle.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_numvoie.geo_numvoie IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_numvoie.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_numvoie.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_numvoie.tex IS 'Numéro';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_numvoie.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_numvoie.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_numvoie_parcelle
(
  geo_numvoie_parcelle serial NOT NULL,
  annee character varying(4) NOT NULL,
  geo_numvoie character varying(14) NOT NULL,
  geo_parcelle character varying(16) NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
COMMENT ON TABLE geo_numvoie_parcelle IS 'Lien subdivision fiscale - parcelle';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_numvoie_parcelle.geo_numvoie_parcelle IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_numvoie_parcelle.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_numvoie_parcelle.geo_numvoie IS 'Subdivision fiscale';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_numvoie_parcelle.geo_parcelle IS 'Parcelle';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_lieudit
(
  geo_lieudit character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  tex character varying(80),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_lieudit', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                         addgeometrycolumn                         
-------------------------------------------------------------------
 opencadastre.geo_lieudit.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_lieudit_geom_idx
  ON geo_lieudit
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_lieudit_annee_idx
  ON geo_lieudit
  (annee );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_lieudit IS 'Ensemble de parcelles entières comportant une même dénomination géographique résultant de l''usage.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_lieudit.geo_lieudit IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_lieudit.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_lieudit.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_lieudit.tex IS 'Libellé';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_lieudit.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_lieudit.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_dur (geo_dur character varying(2),geo_dur_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE geo_dur ADD PRIMARY KEY (geo_dur);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE geo_batiment
(
  geo_batiment character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  geo_dur character varying(2),
  tex character varying(80),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_batiment', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                         addgeometrycolumn                          
--------------------------------------------------------------------
 opencadastre.geo_batiment.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_batiment_geom_idx
  ON geo_batiment
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_batiment_annee_idx
  ON geo_batiment
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_batiment IS 'Construction assise sur une ou plusieurs parcelles cadastrales.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_batiment.geo_batiment IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_batiment.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_batiment.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_batiment.geo_dur IS 'Type de bâtiment';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_batiment.tex IS 'Texte du bâtiment';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_batiment.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_batiment.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_batiment_parcelle
(
  geo_batiment_parcelle serial NOT NULL,
  annee character varying(4) NOT NULL,
  geo_batiment character varying(14) NOT NULL,
  geo_parcelle character varying(16) NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
COMMENT ON TABLE geo_batiment_parcelle IS 'Lien subdivision fiscale - parcelle';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_batiment_parcelle.geo_batiment_parcelle IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_batiment_parcelle.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_batiment_parcelle.geo_batiment IS 'Bâtiment';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_batiment_parcelle.geo_parcelle IS 'Parcelle';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_zoncommuni
(
  geo_zoncommuni character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  tex character varying(255),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=TRUE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_zoncommuni', 'geom', 2154 , 'MULTILINESTRING', 2 );
**************************

                            addgeometrycolumn                            
-------------------------------------------------------------------------
 opencadastre.geo_zoncommuni.geom SRID:2154 TYPE:MULTILINESTRING DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_zoncommuni_geom_idx
  ON geo_zoncommuni
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_zoncommuni_annee_idx
  ON geo_zoncommuni
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_zoncommuni IS 'Voie du domaine non cadastré (ou passant sur des parcelles non figurées au plan) représentée par un élément linéaire correspondant à son axe.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_zoncommuni.geo_zoncommuni IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_zoncommuni.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_zoncommuni.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_zoncommuni.tex IS 'Nom de la voie';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_zoncommuni.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_zoncommuni.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_tronfluv
(
  geo_tronfluv character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  tex character varying(255),
  creat_date date,
  update_dat date
)
WITH (  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_tronfluv', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                         addgeometrycolumn                          
--------------------------------------------------------------------
 opencadastre.geo_tronfluv.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_tronfluv_geom_idx
  ON geo_tronfluv
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_tronfluv_annee_idx
  ON geo_tronfluv
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_tronfluv IS 'Élément surfacique (fermé) utilisé pour tous les cours d''eau et les rivages de mers. Un libellé y est associé.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tronfluv.geo_tronfluv IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tronfluv.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tronfluv.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tronfluv.tex IS 'Nom du cours d''eau';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tronfluv.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tronfluv.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_can (geo_can character varying(2),geo_can_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE geo_can ADD PRIMARY KEY (geo_can);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE geo_ppln (geo_ppln character varying(2),geo_ppln_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE geo_ppln ADD PRIMARY KEY (geo_ppln);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE geo_palt (geo_palt character varying(2),geo_palt_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE geo_palt ADD PRIMARY KEY (geo_palt);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE geo_map (geo_map character varying(2),geo_map_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE geo_map ADD PRIMARY KEY (geo_map);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE geo_sym (geo_sym character varying(2),geo_sym_lib character varying(150));
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE geo_sym ADD PRIMARY KEY (geo_sym);
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE geo_ptcanv
(
  geo_ptcanv character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  idu character varying(8),
  geo_can character varying(2),
  geo_ppln character varying(2),
  geo_palt character varying(2),
  geo_map character varying(2),
  geo_sym character varying(2),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_ptcanv', 'geom', 2154 , 'POINT', 2 );
**************************

                     addgeometrycolumn                     
-----------------------------------------------------------
 opencadastre.geo_ptcanv.geom SRID:2154 TYPE:POINT DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_ptcanv_geom_idx
  ON geo_ptcanv
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_ptcanv_annee_idx
  ON geo_ptcanv
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_ptcanv IS 'Objet ponctuel servant d''appui aux opérations de lever des plans..';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_ptcanv.geo_ptcanv IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_ptcanv.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_ptcanv.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_ptcanv.idu IS 'Identifiant PCI';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_ptcanv.geo_can IS 'Origine du point';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_ptcanv.geo_ppln IS 'Précision planimétrique';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_ptcanv.geo_palt IS 'Précision altimétrique';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_ptcanv.geo_map IS 'Stabilité de matérialisation du support';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_ptcanv.geo_sym IS 'Genre du point';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_ptcanv.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_ptcanv.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_borne
(
  geo_borne character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_borne', 'geom', 2154 , 'POINT', 2 );
**************************

                    addgeometrycolumn                     
----------------------------------------------------------
 opencadastre.geo_borne.geom SRID:2154 TYPE:POINT DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_borne_geom_idx
  ON geo_borne
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_borne_annee_idx
  ON geo_borne
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_borne IS 'Borne située en limite de propriété et représentée par un symbole ponctuel.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_borne.geo_borne IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_borne.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_borne.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_borne.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_borne.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_borne_parcelle
(
  geo_borne_parcelle serial NOT NULL,
  annee character varying(4) NOT NULL,
  geo_borne character varying(14) NOT NULL,
  geo_parcelle character varying(16) NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
COMMENT ON TABLE geo_borne_parcelle IS 'Lien borne - parcelle';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_borne_parcelle.geo_borne_parcelle IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_borne_parcelle.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_borne_parcelle.geo_borne IS 'borne';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_borne_parcelle.geo_parcelle IS 'Parcelle';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_croix
(
  geo_croix character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_croix', 'geom', 2154 , 'POINT', 2 );
**************************

                    addgeometrycolumn                     
----------------------------------------------------------
 opencadastre.geo_croix.geom SRID:2154 TYPE:POINT DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_croix_geom_idx
  ON geo_croix
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_croix_annee_idx
  ON geo_croix
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_croix IS 'Borne située en limite de propriété et représentée par un symbole ponctuel.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_croix.geo_croix IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_croix.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_croix.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_croix.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_croix.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_croix_parcelle
(
  geo_croix_parcelle serial NOT NULL,
  annee character varying(4) NOT NULL,
  geo_croix character varying(14) NOT NULL,
  geo_parcelle character varying(16) NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
COMMENT ON TABLE geo_croix_parcelle IS 'Lien croix - parcelle';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_croix_parcelle.geo_croix_parcelle IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_croix_parcelle.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_croix_parcelle.geo_croix IS 'Croix';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_croix_parcelle.geo_parcelle IS 'Parcelle';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_symblim
(
  geo_symblim character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  ori numeric(12,9),
  geo_sym  character varying(2),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_symblim', 'geom', 2154 , 'POINT', 2 );
**************************

                     addgeometrycolumn                      
------------------------------------------------------------
 opencadastre.geo_symblim.geom SRID:2154 TYPE:POINT DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_symblim_geom_idx
  ON geo_symblim
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_symblim_annee_idx
  ON geo_symblim
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_symblim IS 'Symbole de limite de propriété représenté par un signe conventionnel de type ponctuel permettant de documenter le plan cadastral et d''en améliorer la lisibilité.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_symblim.geo_symblim IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_symblim.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_symblim.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_symblim.ori IS 'Orientation';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_symblim.geo_sym IS 'Genre';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_symblim.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_symblim.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_symblim_parcelle
(
  geo_symblim_parcelle serial NOT NULL,
  annee character varying(4) NOT NULL,
  geo_symblim character varying(14) NOT NULL,
  geo_parcelle character varying(16) NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
COMMENT ON TABLE geo_symblim_parcelle IS 'Lien symblim - parcelle';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_symblim_parcelle.geo_symblim_parcelle IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_symblim_parcelle.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_symblim_parcelle.geo_symblim IS 'symblim';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_symblim_parcelle.geo_parcelle IS 'Parcelle';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_tpoint
(
  geo_tpoint character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  ori numeric(12,9),
  tex character varying(80),
  geo_sym  character varying(2),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_tpoint', 'geom', 2154 , 'POINT', 2 );
**************************

                     addgeometrycolumn                     
-----------------------------------------------------------
 opencadastre.geo_tpoint.geom SRID:2154 TYPE:POINT DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_tpoint_geom_idx
  ON geo_tpoint
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_tpoint_annee_idx
  ON geo_tpoint
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_tpoint IS 'Détail topographique ponctuel représenté par un signe conventionnel de type ponctuel permettant de documenter le plan cadastral et d''en améliorer la lisibilité.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint.geo_tpoint IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint.ori IS 'Orientation';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint.tex IS 'Texte du détail';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint.geo_sym IS 'Genre';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_tpoint_commune
(
  geo_tpoint_commune serial NOT NULL,
  annee character varying(4) NOT NULL,
  geo_tpoint character varying(14) NOT NULL,
  geo_commune character varying(7) NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
COMMENT ON TABLE geo_tpoint_commune IS 'Lien tpoint - commune';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint_commune.geo_tpoint_commune IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint_commune.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint_commune.geo_tpoint IS 'tpoint';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tpoint_commune.geo_commune IS 'commune';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_tline
(
  geo_tline character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  tex character varying(80),
  geo_sym  character varying(2),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_tline', 'geom', 2154 , 'MULTILINESTRING', 2 );
**************************

                         addgeometrycolumn                          
--------------------------------------------------------------------
 opencadastre.geo_tline.geom SRID:2154 TYPE:MULTILINESTRING DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_tline_geom_idx
  ON geo_tline
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_tline_annee_idx
  ON geo_tline
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_tline IS 'Détail topographique linéaire représenté par un signe conventionnel de type linéaire permettant de documenter le plan cadastral et d''en améliorer la lisibilité.';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tline.geo_tline IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tline.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tline.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tline.tex IS 'Texte du détail';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tline.geo_sym IS 'Genre';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tline.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tline.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_tline_commune
(
  geo_tline_commune serial NOT NULL,
  annee character varying(4) NOT NULL,
  geo_tline character varying(14) NOT NULL,
  geo_commune character varying(7) NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
COMMENT ON TABLE geo_tline_commune IS 'Lien tline - commune';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tline_commune.geo_tline_commune IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tline_commune.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tline_commune.geo_tline IS 'tline';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tline_commune.geo_commune IS 'commune';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_tsurf
(
  geo_tsurf character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  object_rid character varying(80),
  tex character varying(80),
  geo_sym  character varying(2),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_tsurf', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                        addgeometrycolumn                        
-----------------------------------------------------------------
 opencadastre.geo_tsurf.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_tsurf_geom_idx
  ON geo_tsurf
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_tsurf_annee_idx
  ON geo_tsurf
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_tsurf IS 'Détail topographique surfacique représenté par un signe conventionnel de type surfacique permettant de documenter le plan cadastral et d''en améliorer la lisibilité';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tsurf.geo_tsurf IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tsurf.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tsurf.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tsurf.tex IS 'Texte du détail';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tsurf.geo_sym IS 'Genre';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tsurf.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tsurf.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_tsurf_commune
(
  geo_tsurf_commune serial NOT NULL,
  annee character varying(4) NOT NULL,
  geo_tsurf character varying(14) NOT NULL,
  geo_commune character varying(7) NOT NULL
);
**************************

CREATE TABLE
********* QUERY **********
COMMENT ON TABLE geo_tsurf_commune IS 'Lien tsurf - commune';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tsurf_commune.geo_tsurf_commune IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tsurf_commune.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tsurf_commune.geo_tsurf IS 'tsurf';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_tsurf_commune.geo_commune IS 'commune';
**************************

COMMENT
********* QUERY **********
CREATE TABLE geo_label
(
  geo_label character varying(14) NOT NULL,
  annee character varying(4) NOT NULL,
  ogc_fid integer,
  object_rid character varying(80),
  fon character varying(80),
  hei numeric(24,15),
  tyu character varying(80),
  cef numeric(24,15),
  csp numeric(24,15),
  di1 numeric(24,15),
  di2 numeric(24,15),
  di3 numeric(24,15),
  di4 numeric(24,15),
  tpa character varying(80),
  hta character varying(80),
  vta character varying(80),
  atr character varying(80),
  ogr_obj_ln character varying(80),
  ogr_obj__1 character varying(80),
  ogr_atr_va character varying(80),
  ogr_angle numeric(24,15),
  ogr_font_s numeric(24,15),
  geo_parcelle character varying(16),
  geo_section character varying(12),
  geo_voiep character varying(14),
  geo_tsurf character varying(14),
  geo_numvoie character varying(14),
  geo_lieudit character varying(14),
  geo_zoncommuni character varying(14),
  geo_tpoint character varying(14),
  geo_subdfisc character varying(15),
  geo_tline character varying(14),
  geo_tronfluv character varying(14),
  creat_date date,
  update_dat date
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE geo_label_seq
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1;
**************************

CREATE SEQUENCE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'geo_label', 'geom', 2154 , 'POINT', 2 );
**************************

                    addgeometrycolumn                     
----------------------------------------------------------
 opencadastre.geo_label.geom SRID:2154 TYPE:POINT DIMS:2 
(1 row)

********* QUERY **********
CREATE INDEX geo_label_geom_idx
  ON geo_label
  USING gist
  (geom );
**************************

CREATE INDEX
********* QUERY **********
CREATE INDEX geo_label_annee_idx
  ON geo_label
  (annee,object_rid );
**************************

CREATE INDEX
********* QUERY **********
COMMENT ON TABLE geo_label IS 'Libellés';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_label IS 'Identifiant';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.annee IS 'Année';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.ogc_fid IS 'Numéro d''enregistrement source';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.object_rid IS 'Numéro d''objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.creat_date IS 'Date de création';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.update_dat IS 'Date de dernière modification';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.fon IS 'Nom en clair de la police typographique';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.hei IS 'Hauteur des caractères';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.tyu IS 'Type de l''unité utilisée';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.cef IS 'Facteur d''agrandissement';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.csp IS 'Espacement intercaractères';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.di1 IS 'Orientation composante X du vecteur hauteur';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.di2 IS 'Orientation composante Y du vecteur hauteur';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.di3 IS 'Orientation composante X du vecteur base';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.di4 IS 'Orientation composante Y du vecteur base';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.tpa IS 'Sens de l''écriture';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.hta IS 'Alignement horizontal du texte';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.vta IS 'Alignement vertical du texte';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.atr IS 'Identificateur de l''attribut à écrire';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.ogr_obj_ln IS 'lien n°objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.ogr_obj__1 IS 'type objet';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.ogr_atr_va IS 'Ogr valeur';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.ogr_angle IS 'Ogr angle';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.ogr_font_s IS 'Ogr taille fonte';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_parcelle IS 'Parcelle';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_section IS 'Section';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_voiep IS 'Voip';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_tsurf IS 'TSurf';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_numvoie IS 'Numvoie';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_lieudit IS 'Lieudit';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_zoncommuni IS 'ZonCommuni';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_tpoint IS 'TPoint';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_subdfisc IS 'SubdFisc';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_tline IS 'TLine';
**************************

COMMENT
********* QUERY **********
COMMENT ON COLUMN geo_label.geo_tronfluv IS 'TronFluv';
**************************

COMMENT
********* QUERY **********
CREATE TABLE edigeo_rel ( edigeo_rel serial,nom character varying(30),de character varying(80),vers character varying(80));
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE edigeo_rel ADD PRIMARY KEY (edigeo_rel );
**************************

ALTER TABLE
********* QUERY **********
INSERT INTO om_parametre values (3,'année','2011',1);
**************************

INSERT 0 1
********* QUERY **********
CREATE TABLE dgi_parcelle AS
 SELECT 
	row_number() OVER(ORDER BY g.geo_parcelle DESC) AS dgi_parcelle, 
	p.ccosec || p.dnupla AS code, 
	p.ccodep || p.ccocom AS code_insee, 
	p.ccosec as section, 
	p.dnupla as dnupla, 
	g.geom AS geom
   FROM geo_parcelle g
   JOIN parcelle p 
	ON  g.parcelle = p.parcelle
   JOIN om_parametre o 
	ON p.annee = o.valeur AND o.om_parametre = 3;
**************************

SELECT 0
********* QUERY **********
ALTER TABLE dgi_parcelle
  ADD CONSTRAINT dgi_parcelle_pk PRIMARY KEY(dgi_parcelle );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE dgi_parcelle DROP COLUMN geom;
**************************

ALTER TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'dgi_parcelle', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                         addgeometrycolumn                          
--------------------------------------------------------------------
 opencadastre.dgi_parcelle.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE TABLE dgi_uf AS
   SELECT
	row_number() OVER(ORDER BY g.geo_parcelle DESC) AS dgi_uf, 
	p.ccosec || p.dnupla AS code, 
	p.ccodep || p.ccocom AS code_insee, 
	p.ccosec as section, 
	p.dnupla as dnupla, 
	g.geom_uf AS geom
   FROM geo_parcelle g
   JOIN parcelle p 
	ON  g.parcelle = p.parcelle
   JOIN om_parametre o 
	ON p.annee = o.valeur AND o.om_parametre = 3
   WHERE geom_uf is not null;
**************************

SELECT 0
********* QUERY **********
ALTER TABLE dgi_uf
  ADD CONSTRAINT dgi_uf_pk PRIMARY KEY(dgi_uf );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE dgi_uf DROP COLUMN geom;
**************************

ALTER TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'dgi_uf', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                      addgeometrycolumn                       
--------------------------------------------------------------
 opencadastre.dgi_uf.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE TABLE dgi_batiment AS
   SELECT 
	row_number() OVER(ORDER BY b.geo_batiment DESC) AS dgi_batiment,
	b.geo_batiment AS code,
	CASE WHEN geo_dur='01' THEN 'bâti dur' ELSE 'bâti léger' END AS type,
	b.geom AS geom
   FROM geo_batiment b
   JOIN om_parametre o 
	ON b.annee = o.valeur AND o.om_parametre = 3;
**************************

SELECT 0
********* QUERY **********
ALTER TABLE dgi_batiment
  ADD CONSTRAINT dgi_batiment_pk PRIMARY KEY(dgi_batiment );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE dgi_batiment DROP COLUMN geom;
**************************

ALTER TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'dgi_batiment', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                         addgeometrycolumn                          
--------------------------------------------------------------------
 opencadastre.dgi_batiment.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE TABLE dgi_adresse_parcelle AS
	SELECT	row_number() OVER(ORDER BY parcelle DESC) AS dgi_adresse_parcelle,
		parcelle,
		code_insee,
		section,
		dnupla,
		code_rivoli,
		numero,
		repetition,
		lib_voie,
		numero||' '||CASE WHEN repetition='' THEN '' ELSE  repetition||' ' END||lib_voie AS adresse,
		numero||' '||CASE WHEN repetition='' THEN '' ELSE  repetition END AS affichage,
		'-'||code_rivoli||'-' AS cle_rivoli,
		'-'||code_rivoli||'-'||numero||'-' AS cle_rivoli_numero,
		'-'||code_rivoli||'-'||numero||'-'||repetition||'-' AS cle_rivoli_numero_rep,
		1 as multi_adresse,
		geom
	FROM (
	SELECT DISTINCT l.ccosec || l.dnupla AS parcelle, 
		l.ccodep || l.ccocom AS code_insee, 
		l.ccosec AS section, 
		l.dnupla AS dnupla,
		l.ccodep || l.ccocom||l.ccoriv AS code_rivoli,
		to_number(CASE WHEN trim(dnvoiri)='' THEN '0' ELSE trim(dnvoiri) END,'0000') AS numero,
		CASE WHEN trim(l.dindic) IN ('','-','6','7') THEN '' WHEN trim(l.dindic)='3' THEN 'TER' WHEN trim(l.dindic)='4' THEN 'QUATER' WHEN trim(l.dindic)='5' THEN 'CINQUIES' ELSE  trim(l.dindic) END AS repetition,
		trim(l.dvoilib) AS lib_voie,
		g.geom AS geom
	FROM	local00 l
	JOIN	om_parametre p
		ON om_parametre=3 AND l.annee=p.valeur
	JOIN	geo_parcelle g
		ON g.parcelle=l.parcelle
	 ) AS v;
**************************

SELECT 0
********* QUERY **********
ALTER TABLE dgi_adresse_parcelle
  ADD CONSTRAINT dgi_adresse_parcelle_pk PRIMARY KEY(dgi_adresse_parcelle );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE dgi_adresse_parcelle DROP COLUMN geom;
**************************

ALTER TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'dgi_adresse_parcelle', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                             addgeometrycolumn                              
----------------------------------------------------------------------------
 opencadastre.dgi_adresse_parcelle.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
CREATE TABLE dgi_adresse_uf AS
SELECT	row_number() OVER(ORDER BY parcelle DESC) AS dgi_adresse_uf,
	parcelle,
	code_insee,
	section,
	dnupla,
	code_rivoli,
	numero,
	repetition,
	lib_voie,
	adresse,
	affichage,
	cle_rivoli,
	cle_rivoli_numero,
	cle_rivoli_numero_rep,
	1 as multi_adresse,
	geom
FROM (
	SELECT DISTINCT 
		parcelle,
		code_insee,
		section,
		dnupla,
		code_rivoli,
		numero,
		repetition,
		lib_voie,
		numero||' '||CASE WHEN repetition='' THEN '' ELSE  repetition||' ' END||lib_voie AS adresse,
		numero||' '||CASE WHEN repetition='' THEN '' ELSE  repetition END AS affichage,
		'-'||code_rivoli||'-' AS cle_rivoli,
		'-'||code_rivoli||'-'||numero||'-' AS cle_rivoli_numero,
		'-'||code_rivoli||'-'||numero||'-'||repetition||'-' AS cle_rivoli_numero_rep,
		geom
	FROM (
		SELECT DISTINCT 
			l.ccosec || l.dnupla AS parcelle, 
			l.ccodep || l.ccocom AS code_insee, 
			l.ccosec AS section, 
			l.dnupla AS dnupla,
			l.ccodep || l.ccocom||l.ccoriv AS code_rivoli,
			to_number(CASE WHEN trim(dnvoiri)='' THEN '0' ELSE trim(dnvoiri) END,'0000') AS numero,
			CASE WHEN trim(l.dindic) IN ('','-','6','7') THEN '' WHEN trim(l.dindic)='3' THEN 'TER' WHEN trim(l.dindic)='4' THEN 'QUATER' WHEN trim(l.dindic)='5' THEN 'CINQUIES' ELSE  trim(l.dindic) END AS repetition,
			trim(l.dvoilib) AS lib_voie,
			g.geom_uf AS geom
		FROM	local00 l
		JOIN	om_parametre p
			ON om_parametre=3 AND l.annee=p.valeur
		JOIN	geo_parcelle g
			ON g.parcelle=l.parcelle
		WHERE	l.parcelle NOT IN (select parcellea from parcellecomposante)
	  UNION
		SELECT DISTINCT 
			uf.ccosec || uf.dnupla AS parcelle, 
			uf.ccodep || uf.ccocom AS code_insee, 
			uf.ccosec AS section, 
			uf.dnupla AS dnupla,
			l.ccodep || l.ccocom||l.ccoriv AS code_rivoli,
			to_number(CASE WHEN trim(l.dnvoiri)='' THEN '0' ELSE trim(l.dnvoiri) END,'0000') AS numero,
			CASE WHEN trim(l.dindic) IN ('','-','6','7') THEN '' WHEN trim(l.dindic)='3' THEN 'TER' WHEN trim(l.dindic)='4' THEN 'QUATER' WHEN trim(l.dindic)='5' THEN 'CINQUIES' ELSE  trim(l.dindic) END AS repetition,
			trim(l.dvoilib) AS lib_voie,
			g.geom_uf AS geom
		FROM	local00 l
		JOIN	parcellecomposante pc
			ON pc.parcellea=l.parcelle
		JOIN	om_parametre p
			ON om_parametre=3 AND l.annee=p.valeur
		JOIN	parcelle uf
			ON pc.parcelle=uf.parcelle
		JOIN	geo_parcelle g
			ON g.parcelle=uf.parcelle
	  ) b
) c;
**************************

SELECT 0
********* QUERY **********
ALTER TABLE dgi_adresse_uf
  ADD CONSTRAINT dgi_adresse_uf_pk PRIMARY KEY(dgi_adresse_uf );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE dgi_adresse_uf DROP COLUMN geom;
**************************

ALTER TABLE
********* QUERY **********
SELECT AddGeometryColumn ( current_schema::text, 'dgi_adresse_uf', 'geom', 2154 , 'MULTIPOLYGON', 2 );
**************************

                          addgeometrycolumn                           
----------------------------------------------------------------------
 opencadastre.dgi_adresse_uf.geom SRID:2154 TYPE:MULTIPOLYGON DIMS:2 
(1 row)

********* QUERY **********
UPDATE dgi_adresse_parcelle set multi_adresse=c.cpt
FROM (select parcelle, count(*) AS cpt FROM dgi_adresse_uf GROUP BY parcelle HAVING count(*) > 1) c
WHERE c.parcelle=dgi_adresse_parcelle.parcelle;
**************************

UPDATE 0
********* QUERY **********
UPDATE dgi_adresse_uf set multi_adresse=c.cpt
FROM (select parcelle, count(*) AS cpt FROM dgi_adresse_uf GROUP BY parcelle HAVING count(*) > 1) c
WHERE c.parcelle=dgi_adresse_uf.parcelle;
**************************

UPDATE 0
********* QUERY **********
ALTER TABLE parcelle ADD CONSTRAINT parcelle_pk PRIMARY KEY  (parcelle);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE suf ADD CONSTRAINT suf_pk PRIMARY KEY  (suf);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE sufexoneration ADD CONSTRAINT sufexoneration_pk PRIMARY KEY  (sufexoneration );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE suftaxation ADD CONSTRAINT suftaxation_pk PRIMARY KEY  (suftaxation );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local00 ADD CONSTRAINT local00_pk PRIMARY KEY  (local00);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_pk PRIMARY KEY  (local10);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pev ADD CONSTRAINT pev_pk PRIMARY KEY  (pev);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevexoneration ADD CONSTRAINT pevexoneration_pk PRIMARY KEY  (pevexoneration);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevtaxation ADD CONSTRAINT pevtaxation_pk PRIMARY KEY  (pevtaxation);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevprincipale ADD CONSTRAINT pevprincipale_pk PRIMARY KEY  (pevprincipale);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevprofessionnelle ADD CONSTRAINT pevprofessionnelle_pk PRIMARY KEY  (pevprofessionnelle);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevdependances ADD CONSTRAINT pevdependances_pk PRIMARY KEY  (pevdependances);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_pk PRIMARY KEY  (proprietaire);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE comptecommunal ADD CONSTRAINT comptecommunal_pk PRIMARY KEY  (comptecommunal);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pdl ADD CONSTRAINT pdl_pk PRIMARY KEY  (pdl);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE parcellecomposante ADD CONSTRAINT parcellecomposante_pk PRIMARY KEY  (parcellecomposante);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE lots ADD CONSTRAINT lots_pk PRIMARY KEY  (lots);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE lotslocaux ADD CONSTRAINT loclocaux_pk PRIMARY KEY  (lotslocaux);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE commune ADD CONSTRAINT commune_pk PRIMARY KEY  (commune);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE voie ADD CONSTRAINT voie_pk PRIMARY KEY  (voie);
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE  geo_commune ADD CONSTRAINT geo_commune_pk PRIMARY KEY (geo_commune );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE  geo_section ADD CONSTRAINT geo_section_pk PRIMARY KEY (geo_section );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_subdsect ADD CONSTRAINT geo_subdsect_pk PRIMARY KEY (geo_subdsect );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_parcelle ADD CONSTRAINT geo_parcelle_pk PRIMARY KEY (geo_parcelle );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_subdfisc ADD CONSTRAINT geo_subdfisc_pk PRIMARY KEY (geo_subdfisc );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_subdfisc_parcelle ADD CONSTRAINT geo_subdfisc_parcelle_pk PRIMARY KEY (geo_subdfisc_parcelle );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_voiep ADD CONSTRAINT geo_voiep_pk PRIMARY KEY (geo_voiep );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_numvoie ADD CONSTRAINT geo_numvoie_pk PRIMARY KEY (geo_numvoie );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_numvoie_parcelle ADD CONSTRAINT geo_numvoie_parcelle_pk PRIMARY KEY (geo_numvoie_parcelle );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_lieudit ADD CONSTRAINT geo_lieudit_pk PRIMARY KEY (geo_lieudit );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_batiment ADD CONSTRAINT geo_batiment_pk PRIMARY KEY (geo_batiment );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_batiment_parcelle ADD CONSTRAINT geo_batiment_parcelle_pk PRIMARY KEY (geo_batiment_parcelle );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_zoncommuni ADD CONSTRAINT geo_zoncommuni_pk PRIMARY KEY (geo_zoncommuni );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tronfluv ADD CONSTRAINT geo_tronfluv_pk PRIMARY KEY (geo_tronfluv );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_ptcanv ADD CONSTRAINT geo_ptcanv_pk PRIMARY KEY (geo_ptcanv );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_borne ADD CONSTRAINT geo_borne_pk PRIMARY KEY (geo_borne );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_borne_parcelle ADD CONSTRAINT geo_borne_parcelle_pk PRIMARY KEY (geo_borne_parcelle );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_croix ADD CONSTRAINT geo_croix_pk PRIMARY KEY (geo_croix );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_croix_parcelle ADD CONSTRAINT geo_croix_parcelle_pk PRIMARY KEY (geo_croix_parcelle );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_symblim ADD CONSTRAINT geo_symblim_pk PRIMARY KEY (geo_symblim );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_symblim_parcelle ADD CONSTRAINT geo_symblim_parcelle_pk PRIMARY KEY (geo_symblim_parcelle );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tpoint ADD CONSTRAINT geo_tpoint_pk PRIMARY KEY (geo_tpoint );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tline ADD CONSTRAINT geo_tline_pk PRIMARY KEY (geo_tline );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tpoint_commune ADD CONSTRAINT geo_tpoint_commune_pk PRIMARY KEY (geo_tpoint_commune );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tline_commune ADD CONSTRAINT geo_tline_commune_pk PRIMARY KEY (geo_tline_commune );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tsurf ADD CONSTRAINT geo_tsurf_pk PRIMARY KEY (geo_tsurf );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tsurf_commune ADD CONSTRAINT geo_tsurf_commune_pk PRIMARY KEY (geo_tsurf_commune );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_pk PRIMARY KEY (geo_label );
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE parcelle ADD CONSTRAINT parcelle_comptecommunal_fk FOREIGN KEY (comptecommunal) REFERENCES comptecommunal (comptecommunal) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE parcelle ADD CONSTRAINT parcelle_pdl_fk FOREIGN KEY (pdl) REFERENCES pdl (pdl) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE parcelle ADD CONSTRAINT parcelle_voie_fk FOREIGN KEY ( voie) REFERENCES voie ( voie) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE parcelle ADD CONSTRAINT parcelle_gpdl_fk FOREIGN KEY (gpdl) REFERENCES gpdl (gpdl) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE parcelle ADD CONSTRAINT parcelle_geo_parcelle_fk FOREIGN KEY (geo_parcelle) REFERENCES geo_parcelle (geo_parcelle) ON DELETE SET NULL;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE suf ADD CONSTRAINT suf_parcelle_fk FOREIGN KEY (parcelle) REFERENCES parcelle (parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE suf ADD CONSTRAINT suf_comptecommunal_fk FOREIGN KEY (comptecommunal) REFERENCES comptecommunal (comptecommunal) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE suf ADD CONSTRAINT suf_pdl_fk FOREIGN KEY (pdl) REFERENCES pdl (pdl) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE suf ADD CONSTRAINT suf_gnexps_fk FOREIGN KEY (gnexps) REFERENCES gnexps (gnexps) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE suf ADD CONSTRAINT suf_cgrnum_fk FOREIGN KEY (cgrnum) REFERENCES cgrnum (cgrnum) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE suf ADD CONSTRAINT suf_dsgrpf_fk FOREIGN KEY (dsgrpf) REFERENCES dsgrpf (dsgrpf) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE suf ADD CONSTRAINT suf_cnatsp_fk FOREIGN KEY (cnatsp) REFERENCES cnatsp (cnatsp) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE sufexoneration ADD CONSTRAINT sufexoneration_suf_fk FOREIGN KEY (suf) REFERENCES suf (suf) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE sufexoneration ADD CONSTRAINT sufexoneration_ccolloc_fk FOREIGN KEY (ccolloc) REFERENCES ccolloc (ccolloc) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE sufexoneration ADD CONSTRAINT sufexoneration_gnexts_fk FOREIGN KEY (gnexts) REFERENCES gnexts (gnexts) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE suftaxation ADD CONSTRAINT suftaxation_suf_fk FOREIGN KEY (suf ) REFERENCES suf (suf) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local00 ADD CONSTRAINT local00_parcelle_fk FOREIGN KEY (parcelle) REFERENCES parcelle (parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local00 ADD CONSTRAINT local00_voie_fk FOREIGN KEY ( voie) REFERENCES voie ( voie) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_local00_fk FOREIGN KEY (local00) REFERENCES local00 (local00) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_parcelle_fk FOREIGN KEY (parcelle) REFERENCES parcelle (parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_comptecommunal_fk FOREIGN KEY (comptecommunal) REFERENCES comptecommunal (comptecommunal) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_voie_fk FOREIGN KEY (voie) REFERENCES voie (voie) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_ccoeva_fk FOREIGN KEY (ccoeva) REFERENCES ccoeva (ccoeva) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_dteloc_fk FOREIGN KEY (dteloc) REFERENCES dteloc (dteloc) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_ccoplc_fk FOREIGN KEY (ccoplc) REFERENCES ccoplc (ccoplc) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_cconlc_fk FOREIGN KEY (cconlc) REFERENCES cconlc (cconlc) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_top48a_fk FOREIGN KEY (top48a) REFERENCES top48a (top48a) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_dnatlc_fk FOREIGN KEY (dnatlc) REFERENCES dnatlc (dnatlc) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE local10 ADD CONSTRAINT local10_hlmsem_fk FOREIGN KEY (hlmsem) REFERENCES hlmsem (hlmsem) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pev ADD CONSTRAINT pev_local10_fk FOREIGN KEY (local10) REFERENCES local10 (local10) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pev ADD CONSTRAINT pev_ccoaff_fk FOREIGN KEY (ccoaff) REFERENCES ccoaff (ccoaff) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pev ADD CONSTRAINT pev_gnexpl_fk FOREIGN KEY (gnexpl) REFERENCES gnexpl (gnexpl) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevexoneration ADD CONSTRAINT pevexoneration_pev_fk FOREIGN KEY (pev) REFERENCES pev (pev) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevexoneration ADD CONSTRAINT pevexoneration_ccolloc_fk FOREIGN KEY (ccolloc) REFERENCES ccolloc (ccolloc) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevexoneration ADD CONSTRAINT pevexoneration_gnextl_fk FOREIGN KEY (gnextl) REFERENCES gnextl (gnextl) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevtaxation ADD CONSTRAINT pevtaxation_pev_fk FOREIGN KEY (pev) REFERENCES pev (pev) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevprincipale ADD CONSTRAINT pevprincipale_pev_fk FOREIGN KEY (pev) REFERENCES pev (pev) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevprincipale ADD CONSTRAINT pevprincipale_dep1_cconad_fk FOREIGN KEY (dep1_cconad) REFERENCES cconad (cconad) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevprincipale ADD CONSTRAINT pevprincipale_dep2_cconad_fk FOREIGN KEY (dep2_cconad) REFERENCES cconad (cconad) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevprincipale ADD CONSTRAINT pevprincipale_dep3_cconad_fk FOREIGN KEY (dep3_cconad) REFERENCES cconad (cconad) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevprincipale ADD CONSTRAINT pevprincipale_dep4_cconad_fk FOREIGN KEY (dep4_cconad) REFERENCES cconad (cconad) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevprofessionnelle ADD CONSTRAINT pevprofessionnelle_pev_fk FOREIGN KEY (pev) REFERENCES pev (pev) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevdependances ADD CONSTRAINT pevdependances_pev_fk FOREIGN KEY (pev) REFERENCES pev (pev) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pevdependances ADD CONSTRAINT pevdependances_cconad_fk FOREIGN KEY (cconad) REFERENCES cconad (cconad) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pdl ADD CONSTRAINT pdl_parcelle_fk FOREIGN KEY (parcelle) REFERENCES parcelle (parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pdl ADD CONSTRAINT pdl_comptecommunal_fk FOREIGN KEY (comptecommunal) REFERENCES comptecommunal (comptecommunal) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE pdl ADD CONSTRAINT pdl_ctpdl_fk FOREIGN KEY (ctpdl) REFERENCES ctpdl (ctpdl) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE lots ADD CONSTRAINT lots_pdl_fk FOREIGN KEY (pdl) REFERENCES pdl (pdl) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE lots ADD CONSTRAINT lots_comptecommunal_fk FOREIGN KEY (comptecommunal ) REFERENCES comptecommunal ( comptecommunal ) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE lots ADD CONSTRAINT lots_parcelle_fk FOREIGN KEY (parcelle) REFERENCES parcelle (parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE lots ADD CONSTRAINT lots_cconlo_fk FOREIGN KEY (cconlo) REFERENCES cconlo (cconlo) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_comptecommunal_fk FOREIGN KEY (comptecommunal) REFERENCES comptecommunal (comptecommunal) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_ccodro_fk FOREIGN KEY (ccodro) REFERENCES ccodro (ccodro) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_ccodem_fk FOREIGN KEY (ccodem) REFERENCES ccodem (ccodem) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_gtoper_fk FOREIGN KEY (gtoper) REFERENCES gtoper (gtoper) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_ccoqua_fk FOREIGN KEY (ccoqua) REFERENCES ccoqua (ccoqua) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_dnatpr_fk FOREIGN KEY (dnatpr) REFERENCES dnatpr (dnatpr) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_ccogrm_fk FOREIGN KEY (ccogrm) REFERENCES ccogrm (ccogrm) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_gtyp3_fk FOREIGN KEY (gtyp3) REFERENCES gtyp3 (gtyp3) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_gtyp4_fk FOREIGN KEY (gtyp4) REFERENCES gtyp4 (gtyp4) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_gtyp5_fk FOREIGN KEY (gtyp5) REFERENCES gtyp5 (gtyp5) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE proprietaire ADD CONSTRAINT proprietaire_gtyp6_fk FOREIGN KEY (gtyp6) REFERENCES gtyp6 (gtyp6) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE parcellecomposante ADD CONSTRAINT parcellecomposante_pdl_fk FOREIGN KEY (pdl) REFERENCES pdl (pdl) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE parcellecomposante ADD CONSTRAINT parcellecomposante_parcelle_fk FOREIGN KEY (parcelle) REFERENCES parcelle (parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE parcellecomposante ADD CONSTRAINT parcellecomposante_parcellea_fk FOREIGN KEY (parcellea) REFERENCES parcelle (parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE lotslocaux ADD CONSTRAINT lotslocaux_lots_fk FOREIGN KEY ( lots ) REFERENCES lots (lots) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE lotslocaux ADD CONSTRAINT lotslocaux_local00_fk FOREIGN KEY (local00) REFERENCES local00 (local00) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE lotslocaux ADD CONSTRAINT lotslocaux_local10_fk FOREIGN KEY (local10) REFERENCES local10 (local10) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE commune ADD CONSTRAINT commune_geo_commune_fk FOREIGN KEY (geo_commune) REFERENCES geo_commune (geo_commune) ON DELETE SET NULL;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE commune ADD CONSTRAINT lotslocaux_typcom_fk FOREIGN KEY (typcom) REFERENCES typcom (typcom) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE voie ADD CONSTRAINT voie_commune_fk FOREIGN KEY (commune) REFERENCES commune (commune) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE voie ADD CONSTRAINT voie_typcom_fk FOREIGN KEY (typcom) REFERENCES typcom (typcom) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE voie ADD CONSTRAINT voie_natvoiriv_fk FOREIGN KEY (natvoiriv) REFERENCES natvoiriv (natvoiriv) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE voie ADD CONSTRAINT voie_carvoi_fk FOREIGN KEY (carvoi) REFERENCES carvoi (carvoi) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE voie ADD CONSTRAINT voie_annul_fk FOREIGN KEY (annul) REFERENCES annul (annul) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE voie ADD CONSTRAINT voie_typvoi_fk FOREIGN KEY (typvoi) REFERENCES typvoi (typvoi) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE voie ADD CONSTRAINT voie_indldnbat_fk FOREIGN KEY (indldnbat) REFERENCES indldnbat (indldnbat) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_commune ADD CONSTRAINT geo_commune_commune_fk FOREIGN KEY (commune) REFERENCES commune (commune) ON DELETE SET NULL;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_section ADD CONSTRAINT geo_section_commune_fk FOREIGN KEY (geo_commune) REFERENCES geo_commune (geo_commune) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_subdsect ADD CONSTRAINT geo_subdsect_qupl_fk FOREIGN KEY (geo_qupl) REFERENCES geo_qupl (geo_qupl) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_subdsect ADD CONSTRAINT geo_subdsect_copl_fk FOREIGN KEY (geo_copl) REFERENCES geo_copl (geo_copl) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_subdsect ADD CONSTRAINT geo_subdsect_inp_fk FOREIGN KEY (geo_inp) REFERENCES geo_inp (geo_inp) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_subdsect ADD CONSTRAINT geo_subdsect_section_fk FOREIGN KEY (geo_section) REFERENCES geo_section (geo_section) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_parcelle ADD CONSTRAINT geo_parcelle_indp_fk FOREIGN KEY (geo_indp) REFERENCES geo_indp (geo_indp) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_parcelle ADD CONSTRAINT geo_parcelle_section_fk FOREIGN KEY (geo_section) REFERENCES geo_section (geo_section) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_parcelle ADD CONSTRAINT geo_parcelle_subdsect_fk FOREIGN KEY (geo_subdsect) REFERENCES geo_subdsect (geo_subdsect) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_parcelle ADD CONSTRAINT geo_parcelle_parcelle_fk FOREIGN KEY (parcelle) REFERENCES parcelle (parcelle) ON DELETE SET NULL;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_subdfisc_parcelle ADD CONSTRAINT geo_subdfisc_parcelle_s_fk FOREIGN KEY (geo_subdfisc) REFERENCES geo_subdfisc (geo_subdfisc) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_subdfisc_parcelle ADD CONSTRAINT geo_subdfisc_parcelle_p_fk FOREIGN KEY (geo_parcelle) REFERENCES geo_parcelle (geo_parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_numvoie_parcelle ADD CONSTRAINT geo_numvoie_parcelle_n_fk FOREIGN KEY (geo_numvoie) REFERENCES geo_numvoie (geo_numvoie) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_numvoie_parcelle ADD CONSTRAINT geo_numvoie_parcelle_p_fk FOREIGN KEY (geo_parcelle) REFERENCES geo_parcelle (geo_parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_batiment ADD CONSTRAINT geo_batiment_dur_fk FOREIGN KEY (geo_dur) REFERENCES geo_dur (geo_dur) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_batiment_parcelle ADD CONSTRAINT geo_batiment_parcelle_n_fk FOREIGN KEY (geo_batiment) REFERENCES geo_batiment (geo_batiment) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_batiment_parcelle ADD CONSTRAINT geo_batiment_parcelle_p_fk FOREIGN KEY (geo_parcelle) REFERENCES geo_parcelle (geo_parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_ptcanv ADD CONSTRAINT geo_ptcanv_can_fk FOREIGN KEY (geo_can) REFERENCES geo_can (geo_can) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_ptcanv ADD CONSTRAINT geo_ptcanv_ppln_fk FOREIGN KEY (geo_ppln) REFERENCES geo_ppln (geo_ppln) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_ptcanv ADD CONSTRAINT geo_ptcanv_palt_fk FOREIGN KEY (geo_palt) REFERENCES geo_palt (geo_palt) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_ptcanv ADD CONSTRAINT geo_ptcanv_map_fk FOREIGN KEY (geo_map) REFERENCES geo_map (geo_map) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_ptcanv ADD CONSTRAINT geo_ptcanv_sym_fk FOREIGN KEY (geo_sym) REFERENCES geo_sym (geo_sym) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_borne_parcelle ADD CONSTRAINT geo_borne_parcelle_n_fk FOREIGN KEY (geo_borne) REFERENCES geo_borne (geo_borne) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_borne_parcelle ADD CONSTRAINT geo_borne_parcelle_p_fk FOREIGN KEY (geo_parcelle) REFERENCES geo_parcelle (geo_parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_croix_parcelle ADD CONSTRAINT geo_croix_parcelle_n_fk FOREIGN KEY (geo_croix) REFERENCES geo_croix (geo_croix) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_croix_parcelle ADD CONSTRAINT geo_croix_parcelle_p_fk FOREIGN KEY (geo_parcelle) REFERENCES geo_parcelle (geo_parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_symblim ADD CONSTRAINT geo_symblim_sym_n_fk FOREIGN KEY (geo_sym) REFERENCES geo_sym (geo_sym) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_symblim_parcelle ADD CONSTRAINT geo_symblim_parcelle_n_fk FOREIGN KEY (geo_symblim) REFERENCES geo_symblim (geo_symblim) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_symblim_parcelle ADD CONSTRAINT geo_symblim_parcelle_p_fk FOREIGN KEY (geo_parcelle) REFERENCES geo_parcelle (geo_parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tpoint ADD CONSTRAINT geo_tpoint_sym_n_fk FOREIGN KEY (geo_sym) REFERENCES geo_sym (geo_sym) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tpoint_commune ADD CONSTRAINT geo_tpoint_commune_n_fk FOREIGN KEY (geo_tpoint) REFERENCES geo_tpoint (geo_tpoint) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tpoint_commune ADD CONSTRAINT geo_tpoint_commune_p_fk FOREIGN KEY (geo_commune) REFERENCES geo_commune (geo_commune) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tline ADD CONSTRAINT geo_tline_sym_n_fk FOREIGN KEY (geo_sym) REFERENCES geo_sym (geo_sym) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tline_commune ADD CONSTRAINT geo_tline_commune_n_fk FOREIGN KEY (geo_tline) REFERENCES geo_tline (geo_tline) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tline_commune ADD CONSTRAINT geo_tline_commune_p_fk FOREIGN KEY (geo_commune) REFERENCES geo_commune (geo_commune) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tsurf ADD CONSTRAINT geo_tsurf_sym_n_fk FOREIGN KEY (geo_sym) REFERENCES geo_sym (geo_sym) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tsurf_commune ADD CONSTRAINT geo_tsurf_commune_n_fk FOREIGN KEY (geo_tsurf) REFERENCES geo_tsurf (geo_tsurf) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_tsurf_commune ADD CONSTRAINT geo_tsurf_commune_p_fk FOREIGN KEY (geo_commune) REFERENCES geo_commune (geo_commune) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_parcelle_fk FOREIGN KEY (geo_parcelle) REFERENCES geo_parcelle (geo_parcelle) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_section_fk FOREIGN KEY (geo_section) REFERENCES geo_section (geo_section) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_voiep_fk FOREIGN KEY (geo_voiep) REFERENCES geo_voiep (geo_voiep) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_tsurf_fk FOREIGN KEY (geo_tsurf) REFERENCES geo_tsurf (geo_tsurf) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_numvoie_fk FOREIGN KEY (geo_numvoie) REFERENCES geo_numvoie (geo_numvoie) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_lieudit_fk FOREIGN KEY (geo_lieudit) REFERENCES geo_lieudit (geo_lieudit) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_zoncommuni_fk FOREIGN KEY (geo_zoncommuni) REFERENCES geo_zoncommuni (geo_zoncommuni) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_tpoint_fk FOREIGN KEY (geo_tpoint) REFERENCES geo_tpoint (geo_tpoint) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_subdfisc_fk FOREIGN KEY (geo_subdfisc) REFERENCES geo_subdfisc (geo_subdfisc) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_tline_fk FOREIGN KEY (geo_tline) REFERENCES geo_tline (geo_tline) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
ALTER TABLE geo_label ADD CONSTRAINT geo_label_tronfluv_fk FOREIGN KEY (geo_tronfluv) REFERENCES geo_tronfluv (geo_tronfluv) ON DELETE CASCADE;
**************************

ALTER TABLE
********* QUERY **********
INSERT INTO gpdl VALUES ('0','la parcelle n''appartient pas à une pdl');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gpdl VALUES ('1','la parcelle est référence de pdl (identifie une pdl)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gpdl VALUES ('2','la parcelle est composante de pdl mais ne l''identifie pas');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexps VALUES ('CD', 'Exonération permanente des parts communale et départementale(Bien d''une région situe dans une autre région)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexps VALUES ('CR', 'Exonération permanente des parts communale et régionale (Bien d''un département situe dans un autre département)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexps VALUES ('DR', 'Exonération permanente des parts départementale et régionale (Bien d''une commune situe dans une autre commune)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexps VALUES ('EP', 'Exonération permanente totale');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexps VALUES ('NI', 'Non imposable - Exonération toutes collectivités');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexps VALUES ('RT', 'Exonération des chemins de remembrements association foncière de remembrement');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('01', 'Terres');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('02', 'Prés');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('03', 'Vergers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('04', 'Vignes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('05', 'Bois');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('06', 'Landes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('07', 'Carrières');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('08', 'Eaux');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('09', 'Jardins');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('10', 'Terrains à bâtir');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('11', 'Terrains d''agrément');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('12', 'Chemin de fer');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cgrnum VALUES ('13', 'Sol');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('AB', 'Terrains à bâtir');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('AG', 'Terrains d’agrément');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('B', 'Bois');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('BF', 'Futaies Feuillues');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('BM', 'Futaies Mixtes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('BO', 'Oseraies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('BP', 'Peupleraies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('BR', 'Futaies résineuses');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('BS', 'Taillis sous Futaies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('BT', 'Taillis simples');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('CA', 'Carrières');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('CH', 'Chemins de fer, Canaux de Navigation');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('E', 'Eaux');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('J', 'Jardins');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('L', 'Landes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('LB', 'Landes Boisées');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('P', 'Prés');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('PA', 'Pâtures ou Pâturages');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('PC', 'Pacages ou Pâtis');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('PE', 'Prés d''embouche');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('PH', 'Herbages');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('PP', 'Prés, Pâtures ou Herbages plantes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('S', 'Sols');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('T', 'Terre');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('TP', 'Terres plantées');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('VE', 'Vergers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dsgrpf VALUES ('VI', 'Vignes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ABREU', 'Abreuvoirs');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ABRIC', 'Abricotiers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ACACI', 'Acacias');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('AEROD', 'Aérodromes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('AIRE', 'Aire ou Airial');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ALLEE', 'Allée (no groupe)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ALLUV', 'Alluvions');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('AMAND', 'Amandiers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ARDOI', 'Ardoiseries');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ARGIL', 'Argilière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ASPER', 'Aspergeraie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('AULNE', 'Aulnaie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('AVENU', 'Avenue');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('BALLA', 'Ballastière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('BAMBO', 'Bambouseraie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('BASS', 'Bassins');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('BIEF', 'Bief');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('BOUL', 'Boulaie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('BROUS', 'Broussailles ou buissons');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('BRUY', 'Bruyères');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('BTIGE', 'Verger exploite en basses tiges');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('BUIS', 'Buissière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CAMP', 'Terrain de camping');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CANAL', 'Canal');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CASS', 'Cassis');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CEDRA', 'Cédratiers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CERCL', 'Cerclières');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CERIS', 'Cerisaie ou cerisiers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CHASS', 'Terrain de chasse');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CHAT', 'Châtaigneraie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CHEM', 'Chemin de remembrement');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CHENE', 'Chênes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CHLIE', 'Chênes-lièges');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CHTRU', 'Chênes truffiers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CHVER', 'Chênes verts');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CIDRE', 'Cidre');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CITRO', 'Citronniers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CLAIR', 'Claires');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('COING', 'Cognassiers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('COULE', 'Bois de couleur');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CRAY', 'Crayère');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CRESS', 'Cressonnière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('CRYPT', 'Cryptomeria');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('DIGUE', 'Digues');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('DUNE', 'Dunes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('EAU', 'Pièce d''eau');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ECOLE', 'Ecole');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('EPICE', 'Epicéas');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ESPAL', 'Verger exploite en espaliers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ETANG', 'Etangs');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('EUCAL', 'Eucalyptus');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('FALAI', 'Falaises');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('FAMIL', 'Verger familial');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('FER', 'Chemin de fer');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('FILAO', 'Filao');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('FLOR', 'Jardin floral');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('FONT', 'Fontaine');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('FOSSE', 'Fosse');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('FOUG', 'Fougeraie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('FRAMB', 'Framboisiers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('FRICH', 'Friche');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('GAREN', 'Garenne');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('GENET', 'Genets');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('GLAIS', 'Glaisière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('GRAVE', 'Gravière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('HAIES', 'Haies fruitières');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('HERB', 'Herbage');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('HETRE', 'Hêtres');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('HIST', 'Dépendances de monuments historiques');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('HORT', 'Jardins horticoles');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('HOUBL', 'Houblon');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('HTIGE', 'Vergers exploités en hautes tiges');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('HUITR', 'Parc à huîtres');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('IMM', 'Dépendances d''ensemble immobilier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('IMPRO', 'Lande improductive');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('INTEN', 'Verger industriel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('JARD', 'Jardin d’agrément');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('JETT', 'Jettins');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('JOUAL', 'Joualle');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('KIWIS', 'Kiwis');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('LAC', 'Lac');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('LAGUN', 'Lagune');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('LAVOI', 'Lavoir');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('LEGUM', 'Légumière de plein champ');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('MAQUI', 'Maquis');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('MARAI', 'Pré marais');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('MARAM', 'Jardin maraîcher aménagé');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('MARE', 'Mare');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('MAREC', 'Marécage');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('MARN', 'Marnière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('MARNA', 'Jardin maraîcher non aménagé');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('MELEZ', 'Mélèzes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('MOTTE', 'Mottes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('MUR', 'Mûraies ou mûriers (vergers)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('NATUR', 'Bois naturel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('NOISE', 'Noiseraie ou noisetiers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('NOYER', 'Noyeraie ou noyers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('NPECH', 'Etang non potable');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('OLIVE', 'Olivaies ou oliviers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ORANG', 'Orangers (vergers)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ORME', 'Ormaie ou ormes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PACAG', 'Pacage');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PAFEU', 'Pare-feux');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PALMI', 'Bois palmiste');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PARC', 'Parc');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PASS', 'Passage (non groupe)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PATIS', 'Pâtis');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PATUR', 'Pâture plantée');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PECH', 'Etangs pêchables');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PECHE', 'Pêchers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PEPIN', 'Pépinières');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PIEDS', 'Pieds-mères (vignes)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PIERR', 'Pierraille, pierrier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PIN', 'Pins');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PLAGE', 'Plage');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PLATR', 'Plâtrière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PLVEN', 'Vergers de plein vent');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('POIRE', 'Poiriers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('POMME', 'Pommiers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('POTAG', 'Potagers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PROTE', 'Bois de protection');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('PRUNE', 'Pruniers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('RAIS', 'Raisins de table');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('RESER', 'Réservoir');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('RESIN', 'Résineux');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('RIVAG', 'Rivage (bois de)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('RIZ', 'Rizière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ROC', 'Rocs ou rochers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('ROUI', 'Routoir ou roussoir');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('RUE', 'Rue');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('RUINE', 'Ruines');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('SABLE', 'Sablière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('SALIN', 'Marais salant');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('SAPIN', 'Sapins ou sapinière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('SART', 'Sartières');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('SAULE', 'Saulaie ou saussaie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('SERRE', 'Serre');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('SOL', 'Sols');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('SOURC', 'Source');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('SPORT', 'Terrain de sport');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('TAMAR', 'Tamarin');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('TAUZ', 'Taillis tauzin');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('TERRI', 'Terrils');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('TOURB', 'Tourbière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('TOUYA', 'Touyas');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('VADC', 'Vins d''appellation d''origine contrôlée');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('VAGUE', 'Terrain vague');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('VANIL', 'Vanille');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('VAOC', 'Vins d''appellation d''origine contrôlée');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('VCHAS', 'Chasselas');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('VDQS', 'Vins délimités de qualité supérieure');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('VIGNE', 'Vigne');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cnatsp VALUES ('VIVIE', 'Vivier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccolloc VALUES ('TC', 'toutes les collectivités');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccolloc VALUES ('C', 'Commune => l''exonération porte sur la seule part communale');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccolloc VALUES ('D', 'Département => l''exonération porte sur la seule part départementale');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccolloc VALUES ('R', 'Région => l''exonération porte sur la seule part régionale');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccolloc VALUES ('GC', 'Groupement de communes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccolloc VALUES ('A', 'l''exonération porte sur la taxe additionnelle');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('TU ', 'Exo pour terrains nouvellement plantés en arbres truffiers – art. 1395 B-II du CGI');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('OL ', 'Exonération pour terrains plantés en oliviers (sur délibération)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('TR ', 'Exonération pour plantation de truffiers (sur délibération)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('NO ', 'Exonération pour plantation de noyers (sur délibération)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('PB ', 'Exonération pour plantation de bois (groupe 5),');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('TA ', 'Exonération des terres agricoles (groupes de culture 1 à 6, 8 et 9)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('HP ', 'Exonération temporaire (exonération totale en zone naturelle)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('HR ', 'Exonération temporaire (exonération de 50% sur proposition de la CCID)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('NA ', 'Exonération Natura 2000');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('PP', 'Peupliers - plantations et semis Exonération temporaire de 10 ans');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('PR', 'Résineux - plantations et semis - futaies, taillis sous futaie en régénération naturelle Exonération temporaire de 30 ans');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('PF', 'Feuillus - plantations et semis - futaies, taillis sous futaie en régénération naturelle Exonération temporaire de 50 ans');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('ER', 'Terrains boisés présentant un état de futaie irrégulière en équilibre de régénération Exonération partielle 25% de 15 ans, Renouvelable (% dans PEXN)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexts VALUES ('VG', 'Vergers, cultures fruitières d’arbres et d’arbustes, vignes.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoeva VALUES ('A', 'Méthode comptable');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoeva VALUES ('B', 'Evaluation d’après le bail');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoeva VALUES ('C', 'Evaluation par comparaison');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoeva VALUES ('D', 'Evaluation par voie d’appréciation directe');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoeva VALUES ('E', 'Evaluation spécifique aux transformateurs électriques et appareils à gaz');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoeva VALUES ('T', 'Evaluation tarifaire (futur code)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dteloc VALUES ('1', 'Maison');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dteloc VALUES ('2', 'Appartement');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dteloc VALUES ('3', 'Dépendances');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dteloc VALUES ('4', 'Local commercial ou industriel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dteloc VALUES ('5', 'DOM = maison dans descriptif');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dteloc VALUES ('6', 'DOM = appartement sans descriptif');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dteloc VALUES ('7', 'DOM = dépendance sans descriptif');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dteloc VALUES ('8', 'Locaux de groupe 4 : évaluation tarifaire (non présente depuis 94)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoplc VALUES (' ', 'Construction particulière');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoplc VALUES ('R', 'Construction classée sur sol d''autrui lors de l''initialisation Majic2 (local, hors pdl, avec attribution différente de la parcelle d''assise)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoplc VALUES ('U', 'Chute d''eau, barrage');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoplc VALUES ('V', 'Construction édifiée sur le domaine public');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoplc VALUES ('W', 'Construction édifiée sous le domaine public');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoplc VALUES ('X', 'Voies ferrées établies sur le terrain d''autrui ou sur le domaine public et dont l''assise ne forme pas parcelle');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoplc VALUES ('Y', 'Construction édifiée sous le domaine cadastre');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoplc VALUES ('Z', 'Construction édifiée sur sol d''autrui');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('AP', 'Appartement');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('AT', 'Antenne téléphone');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('AU', 'Autoroute');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('CA', 'Commerce sans boutique');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('CB', 'Local divers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('CD', 'Dépendance commerciale');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('CH', 'Chantier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('CM', 'Commerce avec boutique');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('DC', 'Dépendance lieux communs');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('DE', 'Dépendance bâtie isolée');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('LC', 'Local commun');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('MA', 'Maison');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('ME', 'Maison exceptionnelle');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('MP', 'Maison partagée par une limite territoriale');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('SM', 'Sol de maison');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('U', 'Etablissement industriel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('U1', 'Gare');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('U2', 'Gare : Triage');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('U3', 'Gare : Atelier matériel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('U4', 'Gare : Atelier magasin');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('U5', 'Gare : Dépôt - Titulaire');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('U6', 'Gare : Dépôt - Réel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('U7', 'Gare : Matériel transport');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('U8', 'Gare : Entretien matériel roulant');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('U9', 'Gare : Station usine');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('UE', 'Transformateur électrique');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('UG', 'Appareil à gaz');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlc VALUES ('US', 'Etablissement industriel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO top48a VALUES ('1', 'pev imposé au loyer');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO top48a VALUES ('0', 'pev imposé à la vl');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatlc VALUES ('A', 'Local occupé par un apprenti ou un salarié agricole');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatlc VALUES ('D', 'DOM = habitation principale occupée par le propriétaire');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatlc VALUES ('L', 'Location autre que propriétaire ou usufruitier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatlc VALUES ('P', 'Occupé par le propriétaire ou l’usufruitier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatlc VALUES ('T', 'Location, non affectée à l''habitation, soumise à TVA');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatlc VALUES ('V', 'Vacant');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO hlmsem VALUES ('5', 'hlm');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO hlmsem VALUES ('6', 'sem');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoaff VALUES ('B', 'Bâtiment industriel (lie a ccoeva = A ou E)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoaff VALUES ('C', 'Commerce');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoaff VALUES ('H', 'Habitation');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoaff VALUES ('K', 'Locaux administratifs non passibles de la TH');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoaff VALUES ('L', 'Hôtel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoaff VALUES ('P', 'Professionnel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoaff VALUES ('S', 'Biens divers passibles de la TH');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoaff VALUES ('T', 'Terrain industriel (lie à ccoeva = A ou E)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexpl VALUES ('CD', 'Exonération permanente des parts communale et départementale (biens d''une région situés dans une autre région)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexpl VALUES ('CR', 'Exonération permanente des parts communale et régionale (biens d''un département situés dans un autre département)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexpl VALUES ('DR', 'Exonération permanente des parts départementale et régionale (biens d''une commune situés dans une autre commune)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexpl VALUES ('EP', 'Exonération permanente');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexpl VALUES ('NI', 'Non imposable');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnexpl VALUES ('PP', 'Exonération de pev secondaire de bien indivis');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('CD', 'Exonération permanente des parts communale et départementale (biens d''une région situés dans une autre région)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('CR', 'Exonération permanente des parts communale et régionale (biens d''un département situés dans un autre département)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('DR', 'Exonération permanente des parts départementale et régionale (biens d''une commune situés dans une autre commune)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('EP', 'Exonération permanente');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NI', 'Non imposable');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('PP', 'Exonération de pev secondaire de bien indivis');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AD', 'Droit commun (2 ans) - addition de construction');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AE', 'Exonération de 20 ans en faveur des logements sociaux qui respectent un certain nombre de normes environnementales pour additions de constructions');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AF', '2 ans pour addition de construction avec prêtconventionne, PAP ou PLA');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AL', 'Exo de 15 ans pour logements sociaux (AC)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AP', 'Exonération annuelle pour installation antipollution');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AQ', 'Exonération de 15 ans pour addition de construction antérieure au 01/01/1973');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AS', 'Abattement de 30% pour les locaux sociaux situés dans les DOM et équipés contre les risques naturels');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AT', 'Exonération de 30 ans pour les logements sociaux respectant certains critères de qualité environnementale (addition de construction).');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AU', 'Exonération de 25 ans pour les logements financés au moyen de prêts aidés par l''Etat (addition de construction)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AV', 'Exonération de 25 ans pour les logements financés au moyen de prêts aidés par l''Etat (addition de construction)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AW', 'Exonération de 25 ans pour les logements financés au moyen de prêts aidés par l''Etat (addition de construction)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AX', 'Longue durée (10 ans) - addition de construction');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AY', 'Exo de 15 ans pour logements sociaux (AC)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('AZ', 'Exonération de 30 ans pour les logements sociaux respectant certains critères de qualité environnementale (addition de construction).');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('BE', 'Local situé dans un bassin d''emploi à redynamiser. Article 1383 H du CGI.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('DF', 'Exonération pour bâtiment déshydratation des fourrages.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('EA', 'Economiquement faible - type A');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('EB', 'Economiquement faible - type B');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('EC', 'Economiquement faible - type C');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('EE', 'Exonération économiquement faible (ECF) de type E.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('EF', 'Exonération économiquement faible (ECF) de type F.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('EI', 'Exonération pour les jeunes entreprises innovantes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('EN', 'Exonération entreprise nouvelle.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('GS', 'Exo pour groupement de coopération sanitaire');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('HU', 'Exo de 15 ans pour logements sociaux acquis ou aménagés');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('HY', 'Exo de 25 ans pour logements sociaux acquis ou aménagés');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('LA', 'Durée variable - totale ou partielle - PLA');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('LM', 'Local situé dans une zone de revitalisation rurale. Article 1383 E bis du CGI.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('LR', 'Durée variable - totale ou partielle habilitation');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('LW', 'Exonération de 25 ans pour les logements acquis avec l''aide de l''Etat en vue de leur location.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('LY', 'Prorogation de 10 ans de l’exonération « LE » prévue à l’art. 1384 C du CGI');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('ND', 'Droit commun (2 ans) - construction nouvelle');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NE', 'Exonération de 20 ans en faveur des logements sociaux qui respectent un certain nombre de normes environnementales pour constructions nouvelles');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NF', '2 ans pour construction nouvelle avec prêt conventionne, PAP ou PLA');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NL', 'Exo de 15 ans pour logements sociaux (CN)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NQ', 'Exonération de 15 ans pour construction nouvelle antérieure au 01/01/1973');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NT', 'Exonération de 30 ans pour les logements sociaux respectant certains critères de qualité environnementale (construction nouvelle).');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NU', 'Exonération de 25 ans pour les logements financés au moyen de prêts aidés par l''Etat (construction nouvelle)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NV', 'Exonération de 25 ans pour les logements financés au moyen de prêts aidés par l''Etat (construction nouvelle)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NW', 'Exonération de 25 ans pour les logements financés au moyen de prêts aidés par l''Etat (construction nouvelle)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NX', 'Longue durée (10 ans) - construction nouvelle');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NY', 'Exo de 25 ans pour logements sociaux (CN)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('NZ', 'Exonération de 30 ans pour les logements sociaux respectant certains critères de qualité environnementale (construction nouvelle).');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('PC', 'Exo de 5 ans pour locaux situés dans un pôle de compétitivité art. 1383 F du CGI');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('PE', 'Prolongation a durée variable d’exonération de droit commun');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('PX', 'Prolongation exonérations NX et AX (5 ans maxi)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('RA', 'Exonération de certains établissements industriels durée indéterminée.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('RC', 'Exo pour bail à réhabilitation pris à compter du 01/01/2005 art. 1384 B, 1586 B et 1599 ter E du CGI');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('RQ', 'Local achevé avant la mise en place d''un plan de prévention des risques technologiques. Article 1383 G du CGI.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('RW', 'Local achevé avant le 01/01/1989 ayant fait l''objet de dépenses destinées à économiser l''énergie. Article 1383-O B du CGI.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('ZF', 'Exonération zone franche.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('ZR', 'Exo de 15 ans pour locaux situés dans une zone de revitalisation rurale art. 1383 E du CGI');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('ZS', 'Abattement ZUS 30 % HLM SEM (obsolète à partir du format 2012)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('ZT', 'Logement topé ZUS');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('ZU', 'Exonération pour nouvelles zones franches');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('ZV', 'Exo de 5 ans pour zone franche urbaine de 3éme génération art. 1384 C bis du CGI');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('LG', 'Exonération établissements publics supérieurs sous contrat avec des sociétés dont le capital est entièrement public.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('P1', 'Abattement 1ère année sur outillages, équipements et installations spécifiques de manutention portuaires (100 %).');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('P2', 'Abattement 2ème année sur outillages, équipements et installations spécifiques de manutention portuaires (100 %)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gnextl VALUES ('P3', 'Abattement 3ème, 4ème et 5ème années sur outillages, équipements et installations spécifiques de manutention');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('CV', 'Cave');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('GA', 'Garage');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('GR', 'Grenier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('TR', 'Terrasse');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('BC', 'Bûcher');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('BD', 'Buanderie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('BX', 'Box');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('CD', 'Chambre de domestique');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('CL', 'Cellier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('DC', 'Dépendance de local commun');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('GC', 'Grenier/cave');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('GP', 'Garage/parking');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('JH', 'Jardin d''hiver');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('PA', 'Elément de pur agrément');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('PI', 'Pièce indépendante');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('PK', 'Parking');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('PS', 'Piscine');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('RS', 'Remise');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('SR', 'Serre');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconad VALUES ('TT', 'Toiture-terrasse');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ctpdl VALUES ('BND', 'Libellé BND');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ctpdl VALUES ('CL', 'Libellé CL');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ctpdl VALUES ('CV', 'Libellé CV');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ctpdl VALUES ('TF', 'Libellé TF');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ctpdl VALUES ('CLV', 'Libellé CLV');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ctpdl VALUES ('MP', 'Libellé MP');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlo VALUES ('1', 'lot non bâti');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlo VALUES ('2', 'lot bâti');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlo VALUES ('3', 'lot mixte');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlo VALUES ('4', 'assise de pdl');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlo VALUES ('5', 'lot particulier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO cconlo VALUES ('6', 'lot multi-communes');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('P', 'PROPRIETAIRE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('U', 'USUFRUITIER (ASSOCIE AVEC N)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('N', 'NU-PROPRIETAIRE (ASSOCIE AVEC U)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('B', 'BAILLEUR A CONSTRUCTION (ASSOCIE AVEC R)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('R', 'PRENEUR A CONSTRUCTION (ASSOCIE AVEC B)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('F', 'FONCIER (ASSOCIE AVEC D OU T)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('T', 'TENUYER (ASSOCIE AVEC F)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('D', 'DOMANIER (ASSOCIE AVEC F)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('W', 'PRENEUR D''UN BAIL A REHABILITATION (ASSOCIE AVEC V)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('A', 'LOCATAIRE-ATTRIBUTAIRE (ASSOCIE AVEC P)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('E', 'EMPHYTEOTE (ASSOCIE AVEC P)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('K', 'ANTICHRESISTE (ASSOCIE AVEC P)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('L', 'FONCTIONNAIRE LOGE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('G', 'GERANT,MANDATAIRE,GESTIONNAIRE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('S', 'SYNDIC DE COPROPRIETE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('H', 'ASSOCIE DANS UNE SOCIETE EN TRANSPARENCE FISCALE(ASSOCIE AVEC P)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('O', 'AUTORISATION D’OCCUPATION TEMPORAIRE (70 ANS)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('J', 'JEUNE AGRICULTEUR');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('Q', 'GESTIONNAIRE TAXE SUR LES BUREAUX (ILE DE FRANCE)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('X', 'LA POSTE PROPRIETAIRE ET OCCUPANT');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('Y', 'LA POSTE OCCUPANT - NON PROPRIETAIRE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('C', 'FIDUCIAIRE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodro VALUES ('M', 'OCCUPANT D’UNE PARCELLE APPARTENANT AU DEPARTEMENT DE MAYOTTE OU A L’ETAT (ASSOCIE A P).');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodem VALUES ('C', 'libellé C');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodem VALUES ('S', 'libellé S');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodem VALUES ('L', 'libellé L');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodem VALUES ('I', 'libellé I');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccodem VALUES ('V', 'libellé V');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtoper VALUES ('1', 'physique');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtoper VALUES ('2', 'morale');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoqua VALUES ('1', 'M');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoqua VALUES ('2', 'MME');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccoqua VALUES ('3', 'MLE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatpr VALUES ('ECF', 'Pers. physique : ECONOMIQUEMENT FAIBLE (NON SERVI)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatpr VALUES ('FNL', 'Pers. physique : FONCTIONNAIRE LOGE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatpr VALUES ('DOM', 'Pers. physique : PROPRIETAIRE OCCUPANT DOM');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatpr VALUES ('HLM', 'Pers. Morale : OFFICE HLM');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatpr VALUES ('SEM', 'Pers. Morale : SOCIETE D ECONOMIE MIXTE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatpr VALUES ('TGV', 'Pers. Morale : SNCF');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatpr VALUES ('RFF', 'Pers. Morale : RESEAU FERRE DE FRANCE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatpr VALUES ('CLL', 'Pers. Morale : COLLECTIVITE LOCALE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO dnatpr VALUES ('CAA', 'Pers. Morale : CAISSE ASSURANCE AGRICOLE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('0', 'PERSONNES MORALES NON REMARQUABLES');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('1', 'ETAT');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('2', 'REGION');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('3', 'DEPARTEMENT');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('4', 'COMMUNE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('5', 'OFFICE HLM');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('6', 'PERSONNES MORALES REPRESENTANT DES SOCIETES');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('7', 'COPROPRIETAIRE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('8', 'ASSOCIE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('9', 'ETABLISSEMENTS PUBLICS OU ARGANISMES ASSIMILES');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('0A', 'CAAA en Alsace-Moselle - PERSONNES MORALES NON REMARQUABLES');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('1A', 'CAAA en Alsace-Moselle - ETAT');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('2A', 'CAAA en Alsace-Moselle - REGION');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('3A', 'CAAA en Alsace-Moselle - DEPARTEMENT');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('4A', 'CAAA en Alsace-Moselle - COMMUNE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('5A', 'CAAA en Alsace-Moselle - OFFICE HLM');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('6A', 'CAAA en Alsace-Moselle - PERSONNES MORALES REPRESENTANT DES SOCIETES');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('7A', 'CAAA en Alsace-Moselle - COPROPRIETAIRE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('8A', 'CAAA en Alsace-Moselle - ASSOCIE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ccogrm VALUES ('9A', 'CAAA en Alsace-Moselle - ETABLISSEMENTS PUBLICS OU ARGANISMES ASSIMILES');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp3 VALUES ('2', '2 LIGNE SERVIE (FORMAT LIBRE)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp3 VALUES ('9', 'LIGNE VIDE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp4 VALUES ('1', 'ADRESSE CODIFIEE 1');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp4 VALUES ('2', 'ADRESSE CODIFIEE 2');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp4 VALUES ('3', 'ADRESSE FORMATEE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp4 VALUES ('4', 'ADRESSE BOITE POSTALE OU SERVICE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp4 VALUES ('5', 'ADRESSE CEDEX');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp4 VALUES ('6', 'ADRESSE SECTEUR POSTAL');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp4 VALUES ('7', 'ADRESSE NON CODIFIEE, NON FORMATABLE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp4 VALUES ('8', 'ADRESSE A L ETRANGER');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp4 VALUES ('9', 'LIGNE VIDE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp5 VALUES ('1', 'LIGNE SERVIE (COMMUNE OU LIEU-DIT) 1');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp5 VALUES ('2', 'LIGNE SERVIE (COMMUNE OU LIEU-DIT) 2');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp5 VALUES ('3', 'LIGNE SERVIE (COMMUNE OU LIEU-DIT) 3');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp5 VALUES ('4', 'LIGNE SERVIE FORMAT LIBRE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp5 VALUES ('8', 'ADRESSE A L''ETRANGER (libellé de la ville)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp5 VALUES ('9', 'LIGNE VIDE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp6 VALUES ('2', 'ADRESSE FORMATEE, sous la forme CODE POSTAL sur 5');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp6 VALUES ('3', 'ADRESSE A L''ETRANGER avec codification du pays en CCOPAY');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp6 VALUES ('4', 'ADRESSE A L''ETRANGER sans codification du pays.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp6 VALUES ('5', 'ADRESSE INCODIFIABLE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp6 VALUES ('6', 'ADRESSE CEDEX');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp6 VALUES ('7', 'POSTES AUX ARMEES');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO gtyp6 VALUES ('9', 'LIGNE VIDE');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO typcom VALUES ('N', 'Commune rurale');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO typcom VALUES ('R', 'Commune recensée');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('A', 'ensembles immobiliers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('B', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('C', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('D', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('E', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('F', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('G', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('H', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('I', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('J', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('K', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('L', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('M', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('N', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('O', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('P', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('Q', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('R', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('S', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('T', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('U', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('V', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('W', 'lieux-dits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('X', 'pseudo-voies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('Y', 'voies provisoires à annuler');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('Z', 'voies provisoires à annuler');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('0', 'voies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('1', 'voies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('2', 'voies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('3', 'voies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('4', 'voies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('5', 'voies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('6', 'voies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('7', 'voies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('8', 'voies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO natvoiriv VALUES ('9', 'voies');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO carvoi VALUES ('1', 'voie privée');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO carvoi VALUES ('0', 'voie publique');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO annul VALUES ('O', 'voie annulée sans transfert');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO annul VALUES ('Q', 'voie annulée avec transfert');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO typvoi VALUES ('1', 'voie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO typvoi VALUES ('2', 'ensemble immobilier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO typvoi VALUES ('3', 'lieu-dit');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO typvoi VALUES ('4', 'pseudo-voie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO typvoi VALUES ('5', 'voie provisoire');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO indldnbat VALUES ('1', 'lieu-dit non bâti');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO indldnbat VALUES ('0', 'lieu-dit bâti');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_qupl VALUES ('01', 'Plan régulier établi avant le 20/03/1980');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_qupl VALUES ('02', 'Plan non régulier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_qupl VALUES ('03', 'Plan de qualité P3 ou CP [10 cm]');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_qupl VALUES ('04', 'Plan de qualité P4 ou CP [20 cm]');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_qupl VALUES ('05', 'Plan de qualité P5 ou CP [40 cm]');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_copl VALUES ('01', 'ancien plan');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_copl VALUES ('02', 'plan rénové par voie de mise à jour');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_copl VALUES ('03', 'plan rénové par voie de renouvellement');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_copl VALUES ('04', 'plan rénové par voie de réfection');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_copl VALUES ('05', 'plan remanié');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_copl VALUES ('06', 'plan obtenu par remembrement ou AFAF');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_copl VALUES ('07', 'plan obtenu par exploitation de plans d''arpentage');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_inp VALUES ('00','inconnu');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_inp VALUES ('01','numérisation manuelle');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_inp VALUES ('02','numérisation par scanner');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_inp VALUES ('03','incorporation directe sans numérisation préalable');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_indp VALUES ('01', 'parcelle figurée au plan');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_indp VALUES ('02', 'parcelle non figurée au plan');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_dur VALUES ('01', 'bâti dur');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_dur VALUES ('02', 'bâti léger');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('00', 'Inconnu');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('01', 'IGN');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('02', 'Cadastre');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('03', 'Commune');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('04', 'Équipement');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('05', 'Département');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('06', 'SNCF');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('07', 'RATP');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('08', 'EDF');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('09', 'GDF');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('10', 'Collectivité territoriale');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_can VALUES ('98', 'Divers maîtres d''ouvrage');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_ppln VALUES ('00', 'inconnu');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_ppln VALUES ('01', 'canevas géodésique du 1er ordre');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_ppln VALUES ('02', 'canevas géodésique du 2ème ordre');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_ppln VALUES ('03', 'canevas géodésique du 3ème ordre');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_ppln VALUES ('04', 'canevas géodésique du 4ème ordre');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_ppln VALUES ('05', 'canevas complémentaire (5ème ordre)');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_ppln VALUES ('06', 'canevas d''ensemble ou de stéréopréparation de précision');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_ppln VALUES ('07', 'canevas d''ensemble ou de stéréopréparation ordinaire, y compris triangulation < 1980');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_palt VALUES ('00', 'inconnu');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_palt VALUES ('01', 'canevas de nivellement direct de haute précision');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_palt VALUES ('02', 'canevas de nivellement direct de précision');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_palt VALUES ('03', 'canevas de nivellement direct ordinaire');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_palt VALUES ('04', 'canevas de nivellement indirect géodésique');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_palt VALUES ('05', 'canevas de nivellement indirect trigonométrique');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_palt VALUES ('06', 'cote altimétrique obtenue par photogrammétrie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_palt VALUES ('98', 'autre canevas de nivellement');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_map VALUES ('00', 'inconnu');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_map VALUES ('01', 'non matérialisé');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_map VALUES ('02', 'matérialisé');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_map VALUES ('03', 'rivet ou boulon');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_map VALUES ('04', 'croix gravée');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_map VALUES ('06', 'pylône');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_map VALUES ('07', 'borne');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_map VALUES ('98', 'autre point net et stable, naturel ou artificiel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('12', 'calvaire');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('13', 'texture transparente');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('14', 'symbole d''église');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('15', 'symbole de mosquée');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('16', 'symbole de synagogue');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('17', 'limite d''Etat');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('18', 'limite de département');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('19', 'amorce de limite de commune');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('21', 'chemin');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('22', 'amorce de voie');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('23', 'trottoirs et sentiers');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('24', 'gazoduc ou oléoduc');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('25', 'aqueduc');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('26', 'téléphérique');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('27', 'ligne de transport de force');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('29', 'rail de chemin de fer');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('30', 'flèche de cours d''eau');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('31', 'flèche de rattachement d''un numéro deparcelle ou de la référence d''un bâtiment sur le domaine non cadastré');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('32', 'limite surfacique ne formant pas parcelle');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('33', 'parapet de pont');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('34', 'étang, lac, mare');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('37', 'tunnel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('39', 'mur mitoyen');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('40', 'mur non mitoyen');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('41', 'fossé mitoyen');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('42', 'fossé non mitoyen');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('43', 'clôture mitoyenne');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('44', 'clôture non mitoyenne');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('45', 'haie mitoyenne');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('46', 'haie non mitoyenne');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('47', 'halte');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('48', 'arrêt');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('49', 'station');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('50', 'pylône');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('51', 'cimetière chrétien');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('52', 'cimetière israélite');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('53', 'cimetière musulman');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('62', 'terrain de sports, petits ruisseaux');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('63', 'puits');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('64', 'parking, terrasse, surplomb');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('65', 'piscine');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('71', 'point géodésique borné');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('72', 'point géodésique non borné');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('73', 'point borné de canevas cadastral ordinaire/préalable à AFAF/appui prise de vues permettant confection plan de classe de précision 20cm');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('74', 'point borné de canevas pérenne ou de précision');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('75', 'point borné de canevas d''appui d''une prise de vues permettant la confection d''un plan de classe de précision 10cm');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('76', 'point borné d''appui de géoréférencement');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('77', 'repère NGF');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('78', 'borne du NGF');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('79', 'nivellement MRL');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('80', 'autre repère de nivellement');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('81', 'borne limite de commune');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO geo_sym VALUES ('98', 'objet ponctuel/linéaire divers');
**************************

INSERT 0 1
********* QUERY **********
insert into om_droit select nextval('om_droit_seq'), obj||action,5 from (select '_tab' as action UNION select '_' UNION select '_consulter') lst_act, 
(SELECT tablename as obj FROM pg_tables WHERE schemaname = current_schema and (tablename in ('commune','voie','parcelle','geo_parcelle','parcellecomposante','typcom', 'natvoiriv', 'carvoi', 'annul', 'typvoi', 'indldnbat','ccodro', 'ccodem', 'gtoper', 'ccoqua', 'dnatpr', 'ccogrm', 'gtyp3', 'gtyp4', 'gtyp5', 'gtyp6','gpdl', 'gnexps', 'cgrnum', 'dsgrpf', 'cnatsp', 'ccolloc', 'gnexts','ccoeva', 'dteloc', 'ccoplc', 'cconlc', 'cconad', 'dnatlc', 'ccoaff', 'gnexpl', 'ccolloc', 'gnextl', 'top48a', 'hlmsem','ctpdl', 'cconlo') or tablename like 'geo_%')) lst_obj order by obj, action;
**************************

INSERT 0 234
********* QUERY **********
insert into om_droit select nextval('om_droit_seq'), obj||action,4 from (select '_tab' as action UNION select '_' UNION select '_consulter') lst_act, 
(SELECT tablename as obj FROM pg_tables WHERE schemaname = current_schema and tablename in ('local00','local10','lotslocaux')) lst_obj order by obj, action;
**************************

INSERT 0 9
********* QUERY **********
insert into om_droit select nextval('om_droit_seq'), obj||action,3 from (select '_tab' as action UNION select '_' UNION select '_consulter') lst_act, 
(SELECT tablename as obj FROM pg_tables WHERE schemaname = current_schema and tablename in ('comptecommunal','suf','sufexoneration','suftaxation','lots','pdl','lots','pev','pevdependances','pevexoneration','pevprincipale','pevprofessionnelle','pevtaxation')) lst_obj order by obj, action;
**************************

INSERT 0 36
********* QUERY **********
insert into om_droit select nextval('om_droit_seq'), obj||action,2 from (select '_tab' as action UNION select '_' UNION select '_consulter') lst_act, 
(SELECT tablename as obj FROM pg_tables WHERE schemaname = current_schema and tablename in ('proprietaire')) lst_obj order by obj, action;
**************************

INSERT 0 3
********* QUERY **********
insert into om_droit values ( nextval('om_droit_seq'), 'anonyme',2);
**************************

INSERT 0 1
********* QUERY **********
insert into om_droit values ( nextval('om_droit_seq'), 'choixexercice',2);
**************************

INSERT 0 1
********* QUERY **********
insert into om_droit values ( nextval('om_droit_seq'), 'import_edigeo',2);
**************************

INSERT 0 1
********* QUERY **********
insert into om_droit values ( nextval('om_droit_seq'), 'import_majic3',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (1, 1, 'geo_commune', 'geo_commune', true, '13', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_commune&popup=1&idx=', 'select astext(st_centroid(geom)) as geom, tex2 as titre,  tex2 as description, geo_commune as idx from &DB_PREFIXEgeo_commune where geo_commune=''&idx''', '', 'geo_commune', 'geom', '../scr/form.php?obj=geo_commune&idx=', 'polygon', 'périmetre');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (3, 1, 'geo_borne', 'geo_borne', true, '19', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_borne&popup=1&idx=', 'select astext(geom) as geom, object_rid as titre,  object_rid as description, geo_borne as idx from &DB_PREFIXEgeo_borne where geo_borne=''&idx''', '', 'geo_borne', 'geom', '../scr/form.php?obj=geo_borne&idx=', 'point', 'borne');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (4, 1, 'geo_croix', 'geo_croix', true, '19', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_croix&popup=1&idx=', 'select astext(geom) as geom, object_rid as titre,  object_rid as description, geo_croix as idx from &DB_PREFIXEgeo_croix where geo_croix=''&idx''', '', 'geo_croix', 'geom', '../scr/form.php?obj=geo_croix&idx=', 'point', 'croix');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (5, 1, 'geo_label', 'geo_label', true, '20', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_label&popup=1&idx=', 'select astext(geom) as geom, ogr_atr_va as titre,  ogr_obj__1||'' - ''||ogr_atr_va as description, geo_label as idx from &DB_PREFIXEgeo_label where geo_label=''&idx''', '', 'geo_label', 'geom', '../scr/form.php?obj=geo_label&idx=', 'point', 'étiquette');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (6, 1, 'geo_lieudit', 'geo_lieudit', true, '14', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_lieudit&popup=1&idx=', 'select astext(st_centroid(geom)) as geom, tex as titre,  tex as description, geo_lieudit as idx from &DB_PREFIXEgeo_lieudit where geo_lieudit=''&idx''', '', 'geo_lieudit', 'geom', '../scr/form.php?obj=geo_lieudit&idx=', 'polygon', 'Lieu-dit');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (7, 1, 'geo_numvoie', 'geo_numvoie', true, '21', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_numvoie&popup=1&idx=', 'select astext(geom) as geom, tex as titre,  tex as description, geo_numvoie as idx from &DB_PREFIXEgeo_numvoie where geo_numvoie=''&idx''', '', 'geo_numvoie', 'geom', '../scr/form.php?obj=geo_numvoie&idx=', 'point', 'Adresse parcelle');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (8, 1, 'geo_parcelle', 'geo_parcelle', true, '19', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_parcelle&popup=1&idx=', 'select astext(st_centroid(geom)) as geom, idu as titre,  idu as description, geo_parcelle as idx from &DB_PREFIXEgeo_parcelle where geo_parcelle=''&idx''', '', 'geo_parcelle', 'geom', '../scr/form.php?obj=geo_parcelle&idx=', 'polygon', 'Parcelle');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (9, 1, 'geo_ptcanv', 'geo_ptcanv', true, '20', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_ptcanv&popup=1&idx=', 'select astext(geom) as geom, idu as titre,  idu as description, geo_ptcanv as idx from &DB_PREFIXEgeo_ptcanv where geo_ptcanv=''&idx''', '', 'geo_ptcanv', 'geom', '../scr/form.php?obj=geo_ptcanv&idx=', 'point', 'Pont canevas');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (10, 1, 'geo_section', 'geo_section', true, '14', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_section&popup=1&idx=', 'select astext(st_centroid(geom)) as geom, tex as titre,  tex as description, geo_section as idx from &DB_PREFIXEgeo_section', '', 'geo_section', 'geom', '../scr/form.php?obj=geo_section&idx=', 'polygon', 'Section');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (11, 1, 'geo_subdfisc', 'geo_subdfisc', true, '19', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_subdfisc&popup=1&idx=', 'select astext(st_centroid(geom)) as geom, tex as titre,  tex as description, geo_subdfisc as idx from &DB_PREFIXEgeo_subdfisc where geo_subdfisc=''&idx''', '', 'geo_subdfisc', 'geom', '../scr/form.php?obj=geo_subdfisc&idx=', 'polygon', 'Subdiv. Fisc.');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (12, 1, 'geo_subdsect', 'geo_subdsect', true, '14', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_subdsect&popup=1&idx=', 'select astext(st_centroid(geom)) as geom, idu as titre,  idu as description, geo_subdsect as idx from &DB_PREFIXEgeo_subdsect', '', 'geo_subdsect', 'geom', '../scr/form.php?obj=geo_subdsect&idx=', 'polygon', 'Portion de section');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (13, 1, 'geo_symblim', 'geo_symblim', true, '21', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_symblim&popup=1&idx=', 'select astext(geom) as geom, object_rid as titre,  object_rid as description, geo_symblim as idx from &DB_PREFIXEgeo_symblim where geo_symblim=''&idx''', '', 'geo_symblim', 'geom', '../scr/form.php?obj=geo_symblim&idx=', 'point', 'Limite propriété');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (14, 1, 'geo_tline', 'geo_tline', true, '18', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_tline&popup=1&idx=', 'select astext(st_centroid(geom)) as geom, tex as titre,  tex as description, geo_tline as idx from &DB_PREFIXEgeo_tline where geo_tline=''&idx''', '', 'geo_tline', 'geom', '../scr/form.php?obj=geo_tline&idx=', 'line', 'Dét.Topo.Linéaire');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (15, 1, 'geo_tpoint', 'geo_tpoint', true, '21', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_tpoint&popup=1&idx=', 'select astext(geom) as geom, tex as titre,  tex as description, geo_tpoint as idx from &DB_PREFIXEgeo_tpoint where geo_tpoint=''&idx''', '', 'geo_tpoint', 'geom', '../scr/form.php?obj=geo_tpoint&idx=', 'point', 'Dét.Topo.Ponctuel');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (16, 1, 'geo_tsurf', 'geo_tsurf', true, '20', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_tsurf&popup=1&idx=', 'select astext(st_centroid(geom)) as geom, tex as titre,  tex as description, geo_tsurf as idx from &DB_PREFIXEgeo_tsurf where geo_tsurf=''&idx''', '', 'geo_tsurf', 'geom', '../scr/form.php?obj=geo_tsurf&idx=', 'polygon', 'Dét.Topo.Surfacique');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (17, 1, 'geo_tronfluv', 'geo_tronfluv', true, '17', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_tronfluv&popup=1&idx=', 'select astext(st_centroid(geom)) as geom, tex as titre,  tex as description, geo_tronfluv as idx from &DB_PREFIXEgeo_tronfluv where geo_tronfluv=''&idx''', '', 'geo_tronfluv', 'geom', '../scr/form.php?obj=geo_tronfluv&idx=', 'polygon', 'Cours d''eau');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (18, 1, 'geo_voiep', 'geo_voiep', true, '21', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_voiep&popup=1&idx=', 'select astext(geom) as geom, tex as titre,  tex as description, geo_voiep as idx from &DB_PREFIXEgeo_voiep where geo_voiep=''&idx''', '', 'geo_voiep', 'geom', '../scr/form.php?obj=geo_voiep&idx=', 'point', 'Ensemble Immobilier');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (19, 1, 'geo_zoncommuni', 'geo_zoncommuni', true, '14', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_zoncommuni&popup=1&idx=', 'select astext(st_centroid(geom)) as geom, tex as titre,  tex as description, geo_zoncommuni as idx from &DB_PREFIXEgeo_zoncommuni where geo_zoncommuni=''&idx''', '', 'geo_zoncommuni', 'geom', '../scr/form.php?obj=geo_zoncommuni&idx=', NULL, 'Voie non cadastrées');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map (om_sig_map, om_collectivite, id, libelle, actif, zoom, fond_osm, fond_bing, fond_sat, layer_info, etendue, projection_externe, url, om_sql, maj, table_update, champ, retour, type_geometrie, lib_geometrie) VALUES (20, 1, 'geo_batiment', 'geo_batiment', true, '19', '', '', '', '', '5.21290,43.4106,5.31910,43.4911', 'EPSG:2154', '../scr/tab_sig.php?obj=geo_batiment&popup=1&idx=', 'select astext(st_centroid(geom)) as geom, object_rid as titre,  object_rid as description, geo_batiment as idx from &DB_PREFIXEgeo_batiment where geo_batiment=''&idx''', '', 'geo_batiment', 'geom', '../scr/form.php?obj=geo_batiment&idx=', 'polygon', 'emprise');
**************************

INSERT 0 1
********* QUERY **********
ALTER SEQUENCE om_sig_map_seq RESTART WITH 21;
**************************

ALTER SEQUENCE
********* QUERY **********
INSERT INTO om_sig_map_comp (om_sig_map_comp, om_sig_map, libelle, ordre, actif, comp_maj, type_geometrie, comp_table_update, comp_champ) VALUES (1, 8, 'Unité foncière', 2, 'Oui', NULL, 'polygon', 'geo_parcelle', 'geom_uf');
**************************

INSERT 0 1
********* QUERY **********
ALTER SEQUENCE om_sig_map_comp_seq RESTART WITH 2;
**************************

ALTER SEQUENCE
********* QUERY **********
INSERT INTO om_sig_wms (om_sig_wms, libelle, om_collectivite, id, chemin, couches, cache_type, cache_gfi_chemin, cache_gfi_couches) VALUES (1, 'Cadastre', 1, 'cadastre', ' http://localhost/cartes/qgis/qgis_mapserv.fcgi.exe?SERVICE=WMS&VERSION=1.3.0&map=C:/wamp/www/opencadastre/app/qgis/projet.qgs', 'Cadastre', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
ALTER SEQUENCE om_sig_wms_seq RESTART WITH 2;
**************************

ALTER SEQUENCE
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (1, 1, 1, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (2, 1, 1, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (3, 1, 20, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (4, 1, 20, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (5, 1, 3, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (6, 1, 3, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (7, 1, 4, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (8, 1, 4, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (9, 1, 5, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (10, 1, 5, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (11, 1, 6, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (12, 1, 6, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (13, 1, 7, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (14, 1, 7, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (15, 1, 8, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (16, 1, 8, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (17, 1, 9, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (18, 1, 9, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (19, 1, 10, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (20, 1, 10, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (21, 1, 11, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (22, 1, 11, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (23, 1, 12, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (24, 1, 12, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (25, 1, 13, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (26, 1, 13, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (27, 1, 14, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (28, 1, 14, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (29, 1, 15, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (30, 1, 15, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (31, 1, 16, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (32, 1, 16, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (33, 1, 17, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (34, 1, 17, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (35, 1, 18, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (36, 1, 18, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (37, 1, 19, 'Fond cadastral', 2, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, '', 'Oui', 'Oui', 22);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO om_sig_map_wms (om_sig_map_wms, om_sig_wms, om_sig_map, ol_map, ordre, visibility, panier, pa_nom, pa_layer, pa_attribut, pa_encaps, pa_sql, pa_type_geometrie, sql_filter, baselayer, singletile, maxzoomlevel) VALUES (38, 1, 19, 'Cadastre', 1, 'Oui', NULL, NULL, NULL, NULL, NULL, '', NULL, '', NULL, NULL, NULL);
**************************

INSERT 0 1
********* QUERY **********
ALTER SEQUENCE om_sig_map_wms_seq RESTART WITH 39;
**************************

ALTER SEQUENCE
